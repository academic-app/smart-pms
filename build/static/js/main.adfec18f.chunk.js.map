{"version":3,"sources":["components/LandingPage/ServiceDisplay/service-display.module.css","components/Application/Boards/boards.module.css","components/Application/Cards/cards.module.css","components/Application/Boards/BoardContainer/board-container.module.css","components/Application/Boards/BoardHolder/board-holder.module.css","hoc/AppLayout/boards.svg","components/LandingPage/UA/Login/form-layout.svg","components/LandingPage/UA/Register/form-layout.svg","components/LandingPage/UA/Register/register-form.module.css","api/util/arrayShuffle/arrayShuffle.js","components/LandingPage/ServiceDisplay/ServiceDisplay.js","api/base.js","api/service/UAC.js","api/service/Walls.js","hoc/AppModal/AppModal.js","api/util/MdEditorConfig/MdEditorConfig.js","components/Application/Walls/Form/CreateWallForm.js","components/Application/Walls/NewWall/NewWall.js","components/Application/Walls/Walls.js","api/service/Boards.js","api/service/Cards.js","components/Application/Cards/Form/CreateForm.js","api/util/DragTypes.js","components/Application/Cards/Card/Card.js","components/Application/Cards/Cards.js","components/Application/Boards/Form/CreateForm.js","components/Application/Boards/BoardContainer/BoardContainer.js","components/Application/Boards/Board/Board.js","components/Application/Boards/BoardHolder/BoardHolder.js","components/Application/Boards/Boards.js","components/HomePage/Pages.js","components/HomePage/Dash/Dash.js","hoc/AppLayout/AppLayout.js","components/HomePage/AppMenus/AppMenus.js","components/LandingPage/UA/UAMenus.js","components/LandingPage/UA/Login/LoginForm.js","components/LandingPage/UA/Register/RegisterForm.js","components/LandingPage/UA/UAForms.js","App.js","serviceWorker.js","index.js","components/LandingPage/UA/Login/login-form.module.css","components/Application/Walls/walls.module.css","components/Application/Boards/Board/board.module.css"],"names":["module","exports","shuffle","array","counter","length","index","Math","floor","random","temp","ServiceDisplay","state","servicesToDisplay","displayServices","chars","arrayShuffle","props","children","map","i","join","split","string","Fragment","className","updateServices","interval","setInterval","concatElement","onClick","onLoginAction","onRegistrationAction","clearInterval","el1","el2","el","setState","classes","displayCursor","render","serviceBroadcastArea","this","Component","app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","base","googleAuthProvider","GoogleAuthProvider","loginWithEmailAndPassword","loginInfo","onSuccess","onFailure","auth","fetchSignInMethodsForEmail","user","then","providers","indexOf","signInWithEmailAndPassword","password","response","fetchOnceUserInfo","uid","userInfo","catch","error","console","log","callback","ref","once","snapshot","val","loginWithGoogle","signInWithPopup","result","name","displayName","trim","email","username","toLowerCase","set","register","createUserWithEmailAndPassword","onAuthStateChanged","addNewWall","description","wid","uuidv4","Date","toString","AppModal","Modal","show","onHide","backdrop","keyboard","title","Header","closeButton","Title","Body","buttons","Footer","mdEditorConfig","h1","h2","h3","h4","img","link","code","preview","expand","undo","redo","save","subfield","CreateWallForm","$vm","React","createRef","onValueChanged","event","target","value","Form","onSubmit","preventDefault","Group","Label","Control","type","placeholder","onChange","required","toolbar","language","style","float","Button","variant","onCancel","NewWall","Card","onCreate","AddIcon","Walls","walls","showModal","modalTitle","modalBody","hideModal","onCreateNewWall","newState","createNewWall","wall","e","Object","keys","key","onExploreProjectWall","on","Dash","css","size","color","loading","addNewBoard","bid","oldArr","arr","addNewCard","cid","moveCardLocation","source","dest","card","oldIndex","splice","boardSource","boardDest","remove","moveCard","CreateForm","DragTypes","useDrag","item","boardId","model","collect","monitor","isCardDragging","isDragging","drag","useDrop","accept","canDrop","drop","isOver","opacity","backgroundColor","boxShadow","fontSize","textAlign","display","height","Cards","cards","onCreateNewCard","createNewCard","fetchOrderedCards","cids","BoardContainer","Container","width","marginRight","Board","undefined","Edit","aria-hidden","Delete","BoardHolder","DndProvider","backend","HTML5Backend","Table","Boards","totalBoards","boards","holder","onAddNewBoard","createNewBoard","board","wallId","fetchOrderedBoards","bids","_boards","total","calculateContainerWidth","boardClasses","updateHolder","window","addEventListener","items","document","getElementsByClassName","calculateHolderWidth","innerHeight","NewBoard","windowWidth","innerWidth","Collection","minHeight","Pages","component","page","onListWalls","AppLayout","id","isUserLoggedIn","appName","menus","src","alt","alertMessage","Alert","messageVariant","onClose","onClearMessage","dismissible","AppMenus","label","charAt","toUpperCase","Dropdown","Toggle","Menu","Item","onUserLogOut","UAMenus","LoginForm","loginEmail","loginInfoChanged","clearForm","onLoginCancelled","onLogin","formLayout","Layout","login","sso","onLoginWithGoogle","padding","borderRadius","cancel","RegisterForm","confirm","userInfoChanged","onRegistrationCancelled","onRegister","onRegistrationRejected","pattern","onRegisterWithGoogle","UAForms","onUserLoggedIn","onLoginFailed","localStorage","setItem","CryptoJS","AES","encrypt","onUserRegistered","onRegistrationFailed","showLoginForm","showRegistrationForm","App","currentUserId","getItem","decrypt","enc","Utf8","currentUser","message","displayMessage","cursor","handleLogin","hideLoginForm","hideRegistrationForm","clearMessage","getMenus","removeItem","getContent","getUAForms","failureMessage","detail","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.adfec18f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"serviceBroadcastArea\":\"service-display_serviceBroadcastArea__34vUF\",\"displayCursor\":\"service-display_displayCursor__HmdMO\",\"cursor-blink\":\"service-display_cursor-blink__2caho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"boards_Label__38e8u\",\"Collection\":\"boards_Collection__3ozdd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"cards_Card__3zceJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"board-container_Container__2kmG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"board-holder_Table__2lGgV\"};","module.exports = __webpack_public_path__ + \"static/media/boards.e1a1bef5.svg\";","module.exports = __webpack_public_path__ + \"static/media/form-layout.7b97f5e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/form-layout.9304ee21.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"register-form_Form__35ER-\",\"Layout\":\"register-form_Layout__2y56t\",\"name\":\"register-form_name__3IZz6\",\"username\":\"register-form_username__30lJw\",\"email\":\"register-form_email__1LmOJ\",\"password\":\"register-form_password__29x5v\",\"confirm\":\"register-form_confirm__AnrcZ\",\"register\":\"register-form_register__I_7iF\",\"sso\":\"register-form_sso__wHhP_\",\"cancel\":\"register-form_cancel__2Ijy_\"};","//shuffles array\nexport default function shuffle(array) {\n    let counter = array.length;\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        let index = Math.floor(Math.random() * counter);\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element with it\n        let temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n    return array;\n}","import React, {Component} from \"react\";\nimport arrayShuffle from \"../../../api/util/arrayShuffle/arrayShuffle\";\nimport classes from \"./service-display.module.css\";\n\nclass ServiceDisplay extends Component {\n\n    state = {\n        servicesToDisplay: null\n    }\n\n    componentDidMount() {\n        this.displayServices();\n    }\n\n    displayServices = () => {\n        const arr = this.props.children.map(i => i.props.children);\n        const chars = arrayShuffle(arr).join('').split('');\n        let i = 0;\n        let string = <React.Fragment><i className={\"fa fa-hand-o-right\"}/> </React.Fragment>;\n        this.updateServices(string);\n        const interval = setInterval(()=>{\n            if(i < chars.length) {\n                string = this.concatElement(string, chars[i]);\n                this.updateServices(string);\n                if(chars[i] === '.' && i < chars.length-1){\n                    string = this.concatElement(string, <React.Fragment><br/><i className={\"fa fa-hand-o-right\"}/> </React.Fragment>);\n                    this.updateServices(string);\n                }\n                i++;\n            } else {\n                string = this.concatElement(string,\n                    <React.Fragment>\n                        <br/>\n                        <i className={\"fa fa-hand-o-right\"}/>\n                        <span className={'btn btn-link'} onClick={this.props.onLoginAction}>Login</span>\n                        or\n                        <span className={'btn btn-link'} onClick={this.props.onRegistrationAction}>Register</span>\n                        to begin..\n                    </React.Fragment>\n                );\n                this.updateServices(string);\n                clearInterval(interval);\n            }\n        },100);\n    }\n\n    concatElement = (el1, el2)=>{\n        return <React.Fragment>{el1}{el2}</React.Fragment>\n    }\n\n    updateServices = (el) => {\n        this.setState({\n            servicesToDisplay : <React.Fragment>{el} <b className={classes.displayCursor}> _</b></React.Fragment>\n        })\n    }\n\n    render = () => {\n        return (\n            <p className={classes.serviceBroadcastArea}>\n                {this.state.servicesToDisplay}\n            </p>\n        );\n    }\n}\n\nexport default ServiceDisplay;","// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport * as firebase from \"firebase/app\";\n\n// Add the Firebase services that you want to use\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\nimport \"firebase/database\";\n\n// web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDQSL_YD4ndOnhBDm-UWao9XkkAnXVG7Ww\",\n    authDomain: \"smart-pms-1797e.firebaseapp.com\",\n    databaseURL: \"https://smart-pms-1797e.firebaseio.com\",\n    projectId: \"smart-pms-1797e\",\n    storageBucket: \"smart-pms-1797e.appspot.com\",\n    messagingSenderId: \"97961959988\",\n    appId: \"1:97961959988:web:6d87fd4bcc221bf50f2061\",\n    measurementId: \"G-2KTZ0JQCHX\"\n};\n// Initialize Firebase\nconst app = firebase.initializeApp(firebaseConfig);\nconst base = firebase.database();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nlet currentUserId = null;\nfirebase.auth().onAuthStateChanged((user)=>{\n    if(user){\n        currentUserId = user.uid;\n    }\n})\nfirebase.analytics();\nexport {app, base, googleAuthProvider, currentUserId};","import {app, base, googleAuthProvider} from \"../base\";\n\nexport function loginWithEmailAndPassword(loginInfo, onSuccess, onFailure) {\n    app.auth().fetchSignInMethodsForEmail(loginInfo.user).then((providers) => {\n        if(providers.length === 0){\n            // return app.auth().createUserWithEmailAndPassword(loginInfo.user, this.state.password);\n            return false;\n        }else if(providers.indexOf(\"password\") === -1){\n            return null;\n        }else{\n            return app.auth().signInWithEmailAndPassword(loginInfo.user, loginInfo.password);\n        }\n    }).then(response=>{\n        if(response === null){\n            onFailure(\"user other method for login\");\n        }else if (response === false){\n            onFailure(\"username or password not valid\");\n        }else if ('user' in response){\n            fetchOnceUserInfo(response.user.uid, userInfo => onSuccess(response.user, userInfo));\n        }\n    }).catch(error=>console.log(error));\n}\n\nexport function fetchUserInfo(uid, callback) {\n    base.ref('/users/' + uid).on('value', function(snapshot) {\n        callback(snapshot.val());\n    });\n}\n\nexport function fetchOnceUserInfo(uid, callback) {\n    base.ref('/users/' + uid).once('value').then(function(snapshot) {\n        callback(snapshot.val());\n    });\n}\n\nexport function loginWithGoogle(onSuccess, onFailure) {\n    app.auth().signInWithPopup(googleAuthProvider).then((result, error)=>{\n        if(error){\n            onFailure(\"Authentication Failed. Try other way to log in\");\n        }else{\n            fetchOnceUserInfo(result.user.uid, userInfo => {\n                if(userInfo === null){\n                    console.log(\"...\")\n                    const name = (result.user.displayName && result.user.displayName.trim() !== \"\")? result.user.displayName : result.user.email.split(\"@\")[0];\n                    const username = name.toLowerCase().split(\" \").join(\".\");\n                    const userInfo = {\n                        name: name,\n                        username: username,\n                        email: result.user.email\n                    };\n                    base.ref('users/' + result.user.uid).set(userInfo);\n                    onSuccess(result.user, userInfo);\n                }else{\n                    onSuccess(result.user, userInfo);\n                }\n            })\n        }\n    })\n}\n\nexport function register(user, onSuccess, onFailure) {\n    app.auth().createUserWithEmailAndPassword(user.email, user.password).then((result, error) =>{\n        if(error){\n            onFailure(\"Failed to create account\");\n        }else{\n            if(result.user !== null && result.user.uid !== null) {\n                base.ref('users/' + result.user.uid).set({\n                    name: user.name,\n                    username: user.username,\n                    email: user.email\n                });\n                onSuccess(result.user);\n            }\n        }\n    })\n}","import {base} from \"../base\";\nimport { v4 as uuidv4 } from 'uuid';\n\nexport function fetchWalls(uid, callback) {\n    base.ref('/walls/' + uid).on('value', function(snapshot) {\n        callback(snapshot.val());\n    });\n}\n\nexport function addNewWall(uid, name, description, callback) {\n    const wid = uuidv4();\n    base.ref('/walls/' + uid+\"/\"+wid).set({\n        \"name\":name,\n        \"createdOn\": new Date().toString()\n    }, error=>{\n        if(!error) {\n            base.ref('/wall-info/' + wid).set({\n                \"description\": description,\n                \"isTemplate\": false\n            }, error => {\n                callback(error)\n            });\n        }else callback(error);\n    });\n}","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Modal} from 'react-bootstrap';\n\nfunction AppModal(props){\n    return (\n        <Modal\n            show={props.show||false}\n            onHide={props.onHide}\n            backdrop={props.backdrop || \"static\"}\n            keyboard={false}\n        >\n            {\n                (props.onHide || props.title) && (\n                    <Modal.Header closeButton={props.onHide || false}>\n                        <Modal.Title>{props.title}</Modal.Title>\n                    </Modal.Header>\n                )\n            }\n            <Modal.Body>\n                {props.children}\n            </Modal.Body>\n            {\n                props.buttons && (\n                    <Modal.Footer>\n                        {props.buttons}\n                    </Modal.Footer>\n                )\n            }\n        </Modal>\n    );\n}\n\nexport default AppModal;","export const mdEditorConfig = {\n    h1: true,\n    h2: true,\n    h3: true,\n    h4: true,\n    img: false,\n    link: true,\n    code: true,\n    preview: true,\n    expand: true,\n    undo: true,\n    redo: true,\n    save: false,\n    subfield: true\n}","import React, {Component} from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport MdEditor from \"for-editor\";\nimport {mdEditorConfig} from \"../../../../api/util/MdEditorConfig/MdEditorConfig\";\n\nclass CreateWallForm extends Component{\n    state={\n        name:\"\",\n        description:\"\",\n    }\n\n    $vm = React.createRef()\n\n    onValueChanged = event => {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    render() {\n        return (\n            <Form onSubmit={event=>{\n                event.preventDefault();\n                this.props.onSubmit({\n                    ...this.state\n                })\n            }}>\n                <Form.Group>\n                    <Form.Label>Project Wall Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Give a name to your project wall\"\n                        name={\"name\"}\n                        value={this.state.name}\n                        onChange={this.onValueChanged}\n                        required/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Wall Description</Form.Label>\n                    <MdEditor ref={this.$vm}\n                              toolbar={mdEditorConfig}\n                              language={\"en\"}\n                              placeholder={\"Give description for this wall. (Markdown supported)\"}\n                              name={\"description\"}\n                              value={this.state.description}\n                              onChange={value=>this.setState({\n                                  ...this.state,\n                                  description: value\n                              })}/>\n                </Form.Group>\n                <Form.Group style={{\n                    float:\"right\"\n                }}>\n                    <Button variant={\"secondary\"} onClick={this.props.onCancel}>Cancel</Button>\n                    &nbsp;\n                    <Button type=\"submit\">Create New</Button>\n                </Form.Group>\n            </Form>\n        );\n    }\n}\n\nexport default CreateWallForm;","import React from \"react\";\nimport classes from \"../walls.module.css\";\n\nfunction NewWall(props){\n    return (\n        <div className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n            <span className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.Card} onClick={props.onCreate}>\n                <i className={\"fa fa-plus \"+classes.AddIcon}/><br/>\n                Create New Project Wall\n            </span>\n        </div>\n    );\n}\n\nexport default NewWall;","import React, {Component} from \"react\";\nimport classes from \"./walls.module.css\"\nimport {addNewWall, fetchWalls} from \"../../../api/service/Walls\";\nimport AppModal from \"../../../hoc/AppModal/AppModal\";\nimport CreateWallForm from \"./Form/CreateWallForm\";\nimport {DotLoader} from \"react-spinners\";\nimport NewWall from \"./NewWall/NewWall\";\n\nclass Walls extends Component {\n\n    state = {\n        walls: null,\n        showModal: false,\n        modalTitle: null,\n        modalBody: null\n    }\n\n    hideModal = () =>{\n        this.setState({\n            ...this.state,\n            showModal: false\n        })\n    }\n\n    componentDidMount() {\n        fetchWalls(this.props.uid, walls => {\n            this.setState({\n                ...this.state,\n                walls: walls? Object.keys(walls).map(wid=>(\n                    <div key={wid} className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                        <span\n                            className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.Card}\n                            onClick={()=>this.props.onExploreProjectWall(wid)}>\n                            { walls[wid].name }\n                        </span>\n                    </div>\n                )):\"\"\n            });\n        })\n    }\n\n    onCreateNewWall = () => {\n        const newState = {\n            ...this.state,\n            showModal: true,\n            modalTitle: \"Create New Project Wall\",\n            modalBody: <CreateWallForm\n                            onSubmit={this.createNewWall}\n                            onCancel={this.hideModal}/>\n        }\n        this.setState(newState);\n    }\n\n    createNewWall = (wall) => {\n        addNewWall(this.props.uid, wall.name, wall.description, e=>{\n            if(!e){\n                this.hideModal();\n            }\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label className={classes.Label}><i className={\"fa fa-th-large\"}/>&nbsp;<b>Your Project Walls:</b></label>\n                <div className={\"col-md-12 col-sm-12 container \" + classes.Dash}>\n                    <div className={\"row\"}>\n                        {this.state.walls}\n                        <DotLoader\n                            css={`\n                                margin:25px\n                            `}\n                            size={40}\n                            color={\"#aaa\"}\n                            loading={this.state.walls === null}\n                        />\n                        <NewWall onCreate={this.onCreateNewWall}/>\n                    </div>\n                </div>\n                <AppModal\n                    show={this.state.showModal}\n                    onHide={this.hideModal}\n                    title={this.state.modalTitle}>\n                        {this.state.modalBody}\n                </AppModal>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Walls;","import {base} from \"../base\";\nimport {v4 as uuidv4} from \"uuid\";\n\nexport function fetchOrderedBoards(uid, wid, callback) {\n    base.ref('/ordered-boards/' + uid+\"/\"+wid+\"/\").on('value', snapshot=>{\n        callback(snapshot.val());\n    });\n}\n\nexport function fetchBoards(uid, wid, callback) {\n    base.ref('/boards/' + uid + \"/\" + wid + \"/\").on('value',snapshot => {\n        callback(snapshot.val());\n    });\n}\n\nexport function addNewBoard(uid, wid, title, description, callback) {\n    const bid = uuidv4();\n    base.ref('/boards/' + uid+\"/\"+wid+\"/\"+bid).set({\n        \"title\":title,\n        \"createdOn\": new Date().toString()\n    }, error=>{\n        if(!error) {\n            base.ref('/board-info/' + bid).set({\n                \"description\": description\n            }, error => {\n                callback(error)\n            });\n            base.ref('/ordered-boards/' + uid+\"/\"+wid+\"/\").once('value').then(snapshot=>{\n                const oldArr = snapshot.val() || [];\n                const arr = [...oldArr, bid];\n                base.ref('/ordered-boards/' + uid+\"/\"+wid+\"/\").set(arr);\n            });\n        }else callback(error);\n    });\n}\n\nexport function moveBoard(uid, wid, bid, oldIndex, index, callback) {\n    base.ref('/ordered-boards/'+ uid+\"/\"+wid+\"/\").once('value').then(snapshot=>{\n        const arr = [ ...snapshot.val() ];\n        arr.splice(index, 0, bid)\n        if(oldIndex > index) oldIndex += 1;\n        arr.splice(oldIndex, 1);\n        base.ref('/ordered-boards/' + uid+\"/\"+wid+\"/\").set(arr);\n    });\n}","import {base} from \"../base\";\nimport {v4 as uuidv4} from \"uuid\";\n\nexport function fetchOrderedCards(bid, callback) {\n    base.ref('/ordered-cards/' + bid).on('value', function(snapshot) {\n        callback(snapshot.val());\n    });\n}\n\nexport function fetchCards(bid, callback) {\n    base.ref('/cards/' + bid).on('value', function(snapshot) {\n        callback(snapshot.val());\n    });\n}\n\nexport function addNewCard(bid, title, description, callback) {\n    const cid = uuidv4();\n    base.ref('/cards/' + bid + \"/\" + cid).set({\n        \"title\":title,\n        \"createdOn\": new Date().toString()\n    }, error=>{\n        if(!error) {\n            base.ref('/card-info/' + cid).set({\n                \"description\": description\n            }, error => {\n                callback(error)\n            });\n            base.ref('/ordered-cards/' + bid+\"/\").once('value').then(snapshot=>{\n                const oldArr = snapshot.val() || [];\n                const arr = [cid, ...oldArr];\n                base.ref('/ordered-cards/' + bid+\"/\").set(arr);\n            });\n        }else callback(error);\n    });\n}\n\nexport function moveCard(cid, card, boardSource, boardDest, callback) {\n    base.ref('/cards/' + boardSource + \"/\" + cid).remove(error=>{\n        if(!error) {\n            base.ref('/cards/' + boardDest + \"/\" + cid).set({\n                ...card\n            }, callback);\n        }else callback(error);\n    });\n}\n\nexport function moveCardLocation(source, dest, cid, card, oldIndex, index, callback) {\n    base.ref('/ordered-cards/' + dest + \"/\").once('value').then(snapshot => {\n        const arr = [...(snapshot.val()||[])];\n        arr.splice(index, 0, cid);\n        if (dest === source) {\n            if (oldIndex < index) oldIndex -= 1;\n            arr.splice(oldIndex, 1);\n        }\n        console.log(source);\n        console.log(dest);\n        base.ref('/ordered-cards/' + dest + \"/\").set(arr, e=>{\n            if (dest !== source){\n                base.ref('/ordered-cards/' + source + \"/\").once('value').then(snapshot => {\n                    const arr = [...snapshot.val()];\n                    arr.splice(oldIndex-1, 1);\n                    base.ref('/ordered-cards/' + source + \"/\").set(arr);\n                    moveCard(cid, card, source, dest, callback);\n                });\n            }\n        });\n    });\n}","import React, {Component} from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport MdEditor from \"for-editor\";\nimport {mdEditorConfig} from \"../../../../api/util/MdEditorConfig/MdEditorConfig\";\n\nclass CreateForm extends Component{\n    state={\n        title:\"\",\n        description:\"\",\n    }\n\n    $vm = React.createRef()\n\n    onValueChanged = event => {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    render() {\n        return (\n            <Form onSubmit={event=>{\n                event.preventDefault();\n                this.props.onSubmit({\n                    ...this.state\n                })\n            }}>\n                <Form.Group>\n                    <Form.Label>Card Title</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Title\"\n                        name={\"title\"}\n                        value={this.state.title}\n                        onChange={this.onValueChanged}\n                        required/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Description</Form.Label>\n                    <MdEditor ref={this.$vm}\n                              toolbar={mdEditorConfig}\n                              language={\"en\"}\n                              placeholder={\"Give task description. (Markdown supported)\"}\n                              name={\"description\"}\n                              value={this.state.description}\n                              onChange={value=>this.setState({\n                                  ...this.state,\n                                  description: value\n                              })}/>\n                </Form.Group>\n                <Form.Group style={{\n                    float:\"right\"\n                }}>\n                    <Button variant={\"secondary\"} onClick={this.props.onCancel}>Cancel</Button>\n                    &nbsp;\n                    <Button type=\"submit\">Create New</Button>\n                </Form.Group>\n            </Form>\n        );\n    }\n}\n\nexport default CreateForm;","export const DragTypes = {\n    BOARD: 'board',\n    CARD: 'card',\n}","import React from \"react\";\nimport classes from \"../cards.module.css\";\nimport {useDrag, useDrop} from \"react-dnd\";\nimport {DragTypes} from \"../../../../api/util/DragTypes\";\nimport {moveCardLocation} from \"../../../../api/service/Cards\";\n\nfunction Card(props){\n    const [{ isCardDragging }, drag] = useDrag({\n        item: {\n            cid: props.cid,\n            index: props.index,\n            type: DragTypes.CARD,\n            boardId: props.bid,\n            card: props.model\n        },\n        collect: (monitor) => ({\n            isCardDragging: !!monitor.isDragging()\n        })\n    })\n\n    const [{ isOver, canDrop }, drop] = useDrop({\n        accept: DragTypes.CARD,\n        canDrop: (item) => {\n            return (\n                (item.boardId !== props.bid || props.index !== item.index) &&\n                (item.boardId !== props.bid || props.index !== item.index - 1)\n            )\n        },\n        drop: (item) => { moveCardLocation(item.boardId, props.bid, item.cid, item.card, item.index, props.index, ()=>{console.log(\"done\")}) },\n        collect: monitor => ({\n            isOver: !!monitor.isOver(),\n            canDrop: !!monitor.canDrop()\n        }),\n    })\n\n    const style = {\n        opacity: \"0.7\",\n        backgroundColor: \"#ddd\",\n        boxShadow: \"none\"\n    }\n\n    return (\n        <React.Fragment>\n            <div\n                ref={props.cid && drag}\n                className={\"card \" + classes.Card}\n                style={isCardDragging? style : props.cid == null?{\n                    fontSize:\"9pt\",\n                    textAlign:\"center\"\n                }:null}\n                onClick={props.onClick}\n            >\n                {props.cid == null? props.children : props.title}\n            </div>\n            <div\n                ref={drop}\n                className={\"card \" + classes.Card}\n                style={{\n                    boxShadow: \"none\",\n                    backgroundColor: isOver && canDrop? \"black\" : \"transparent\",\n                    display: canDrop ? \"block\" : \"none\",\n                    height:\"10px\"\n                }}\n            />\n        </React.Fragment>\n    )\n}\n\nexport default Card;","import React, {Component} from \"react\";\nimport {addNewCard, fetchCards, fetchOrderedCards} from \"../../../api/service/Cards\";\nimport CreateForm from \"./Form/CreateForm\";\nimport AppModal from \"../../../hoc/AppModal/AppModal\";\nimport {PropagateLoader} from \"react-spinners\";\nimport Card from \"./Card/Card\";\n\nclass Cards extends Component{\n    state={\n        cards: null,\n        showModal: false,\n        modalTitle: null,\n        modalBody: null\n    }\n\n    hideModal = () =>{\n        this.setState({\n            ...this.state,\n            showModal: false\n        })\n    }\n\n    onCreateNewCard = () => {\n        const newState = {\n            ...this.state,\n            showModal: true,\n            modalTitle: \"Create New Card\",\n            modalBody: <CreateForm\n                onSubmit={this.createNewCard}\n                onCancel={this.hideModal}/>\n        }\n        this.setState(newState);\n    }\n\n    createNewCard = card => {\n        addNewCard(this.props.bid, card.title, card.description, e=>{\n            if(!e){\n                this.hideModal();\n            }\n        })\n    }\n\n    componentDidMount() {\n        fetchOrderedCards(this.props.bid, cids => {\n            fetchCards(this.props.bid, cards => {\n                this.setState({\n                    cards:  (\n                        <React.Fragment>\n                            <Card\n                                cid={null}\n                                index={0}\n                                bid={this.props.bid}\n                                onClick={this.onCreateNewCard}\n                            >\n                                <i className={\"fa fa-plus\"}/>&nbsp;Add New Card\n                            </Card>\n                            {cids && cards && cids.map((cid, index) => cards[cid] && (\n                                <Card\n                                    key={cid}\n                                    index={index+1}\n                                    cid={cid}\n                                    bid={this.props.bid}\n                                    title={cards[cid].title}\n                                    model={cards[cid]}\n                                />\n                            ))}\n                        </React.Fragment>\n                    )\n                })\n            })\n        })\n    }\n\n    render() {\n        return <React.Fragment>\n                    {this.state.cards}\n                    <PropagateLoader\n                        css={`\n                            margin-left:50%\n                        `}\n                        size={20}\n                        color={\"#aaa\"}\n                        loading={this.state.cards === null}\n                    />\n                    <AppModal\n                        show={this.state.showModal}\n                        onHide={this.hideModal}\n                        title={this.state.modalTitle}>\n                        {this.state.modalBody}\n                    </AppModal>\n                </React.Fragment>\n    }\n}\n\nexport default Cards;","import React, {Component} from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport MdEditor from \"for-editor\";\nimport {mdEditorConfig} from \"../../../../api/util/MdEditorConfig/MdEditorConfig\";\n\nclass CreateForm extends Component{\n    state={\n        title:\"\",\n        description:\"\",\n    }\n\n    $vm = React.createRef()\n\n    onValueChanged = event => {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    render() {\n        return (\n            <Form onSubmit={event=>{\n                event.preventDefault();\n                this.props.onSubmit({\n                    ...this.state\n                })\n            }}>\n                <Form.Group>\n                    <Form.Label>Board Title</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Title\"\n                        name={\"title\"}\n                        value={this.state.title}\n                        onChange={this.onValueChanged}\n                        required/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Board Description</Form.Label>\n                    <MdEditor ref={this.$vm}\n                              toolbar={mdEditorConfig}\n                              language={\"en\"}\n                              placeholder={\"Give description for this board. (Markdown supported)\"}\n                              name={\"description\"}\n                              value={this.state.description}\n                              onChange={value=>this.setState({\n                                  ...this.state,\n                                  description: value\n                              })}/>\n                </Form.Group>\n                <Form.Group style={{\n                    float:\"right\"\n                }}>\n                    <Button variant={\"secondary\"} onClick={this.props.onCancel}>Cancel</Button>\n                    &nbsp;\n                    <Button type=\"submit\">Create New</Button>\n                </Form.Group>\n            </Form>\n        );\n    }\n}\n\nexport default CreateForm;","import React from \"react\";\nimport classes from \"./board-container.module.css\";\nimport {useDrop} from \"react-dnd\";\nimport {DragTypes} from \"../../../../api/util/DragTypes\";\nimport {moveBoard} from \"../../../../api/service/Boards\";\n\nfunction BoardContainer(props){\n    const [{ isOver, canDrop }, drop] = useDrop({\n        accept: DragTypes.BOARD,\n        canDrop: (item) => {\n            return props.index !== item.index && props.index !== item.index + 1\n        },\n        drop: (item) => { moveBoard(props.uid, props.wid, item.boardId, item.index, props.index, ()=>{}) },\n        collect: monitor => ({\n            isOver: !!monitor.isOver(),\n            canDrop: !!monitor.canDrop()\n        }),\n    })\n    const style1 = {\n        width:\"0px\",\n        marginRight:\"20px\",\n        backgroundColor:\"#ddd\",\n    }\n    const style2 = {\n        width:\"0px\",\n        marginRight:\"20px\",\n        backgroundColor:\"black\",\n    }\n    return (\n        <React.Fragment>\n            <td ref={drop} className={\"board-container \"+classes.Container} style={(canDrop && isOver) ? style2 : canDrop ? style1 : {\n                width:\"0px\",\n                display:\"none\"\n            }}/>\n            <td className={\"board-container \"+classes.Container} style={{width:props.width}}>\n                {props.children}\n            </td>\n        </React.Fragment>\n    )\n}\n\nexport default BoardContainer;","import React from \"react\";\nimport classes from \"./board.module.css\";\nimport {useDrag} from \"react-dnd\";\nimport {DragTypes} from \"../../../../api/util/DragTypes\";\n\nfunction Board(props) {\n    const [{isDragging}, drag] = useDrag({\n        item: {\n            index: props.index,\n            type: DragTypes.BOARD,\n            boardId: props.bid,\n        },\n        collect: (monitor) => ({\n            isCardDragging: !!monitor.isDragging()\n        })\n    })\n    return(\n        <div ref={props.index !== undefined? drag : null} className={\"card \"+ props.className} onClick={props.onClick}>\n            {\n                props.bid && (\n                    <React.Fragment>\n                        <i className={\"fa fa-pencil \"+classes.Edit} aria-hidden=\"true\"/>\n                        <i className={\"fa fa-times-circle \"+classes.Delete} aria-hidden=\"true\"/>\n                    </React.Fragment>\n                )\n            }\n            { props.title && <p className={classes.Title}>{props.title}</p> }\n            {props.children}\n        </div>\n    )\n}\n\nexport default Board;","import React from \"react\";\nimport classes from \"./board-holder.module.css\";\nimport {DndProvider} from \"react-dnd\";\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\n\nfunction BoardHolder(props) {\n    return(\n        <DndProvider backend={HTML5Backend}>\n            <table\n                className={\"board-holder \"+classes.Table}\n                style={{\n                    width: props.width,\n                    height: props.height\n                }}\n            >\n                <tbody>\n                <tr>\n                    {props.children}\n                </tr>\n                </tbody>\n            </table>\n        </DndProvider>\n    );\n}\n\nexport default BoardHolder;","import React, {Component} from \"react\";\nimport classes from \"./boards.module.css\"\nimport boardClasses from \"./Board/board.module.css\"\nimport {addNewBoard, fetchBoards, fetchOrderedBoards} from \"../../../api/service/Boards\";\nimport Cards from \"../Cards/Cards\";\nimport AppModal from \"../../../hoc/AppModal/AppModal\";\nimport CreateForm from \"./Form/CreateForm\";\nimport BoardContainer from \"./BoardContainer/BoardContainer\";\nimport Board from \"./Board/Board\";\nimport BoardHolder from \"./BoardHolder/BoardHolder\";\nimport {PropagateLoader} from \"react-spinners\";\n\nclass Boards extends Component {\n\n    state = {\n        totalBoards: 0,\n        boards: null,\n        showModal: false,\n        modalTitle: null,\n        modalBody: null,\n        holder: null,\n    }\n\n    hideModal = () =>{\n        this.setState({\n            ...this.state,\n            showModal: false\n        })\n    }\n\n    /**\n     * Add event listener\n     */\n    componentDidMount() {\n        fetchOrderedBoards(this.props.uid, this.props.wallId, bids => {\n            let _boards = null;\n            bids && fetchBoards(this.props.uid, this.props.wallId, boards=>{\n                _boards = bids.map((bid, index) => {\n                    const board = boards[bid];\n                    return (\n                        <BoardContainer\n                            index={index}\n                            key={bid}\n                            uid={this.props.uid}\n                            wid={this.props.wallId}\n                            total={bids.length}\n                            width={this.calculateContainerWidth(bids.length)}\n                        >\n                            <Board\n                                index={index}\n                                bid={bid}\n                                className={boardClasses.Board}\n                                title={board.title}\n                            >\n                                <Cards bid={bid}/>\n                            </Board>\n                        </BoardContainer>\n                    )\n                })\n                this.updateHolder((bids||[]).length, _boards);\n            });\n            this.updateHolder((bids||[]).length, _boards);\n        });\n        window.addEventListener(\"resize\", () =>{\n            let items = document.getElementsByClassName(\"board-container\");\n            for(let i=0; i<items.length; i++){\n                items[i].style.width = this.calculateContainerWidth(this.state.totalBoards);\n            }\n            document.getElementsByClassName(\"board-holder\")[0].style.width =\n                this.calculateHolderWidth(this.state.totalBoards);\n            document.getElementsByClassName(\"board-holder\")[0].style.height = (window.innerHeight - 100) + \"px\";\n        });\n    }\n\n    updateHolder(total, boards){\n        this.setState({\n            totalBoards: total,\n            holder: (\n                <BoardHolder\n                    total={total}\n                    width={this.calculateHolderWidth(total)}\n                    height={(window.innerHeight - 100)+\"px\"}\n                >\n                    {boards}\n                    <BoardContainer index={total} uid={this.props.uid} wid={this.props.wallId} total={total} width={this.calculateContainerWidth(total)}>\n                        <Board bid={null} className={boardClasses.NewBoard} onClick={this.onAddNewBoard}>\n                            <span><i className={\"fa fa-plus\"}/>&nbsp;&nbsp;Add New Board</span>\n                        </Board>\n                    </BoardContainer>\n                </BoardHolder>\n            )\n        })\n    }\n\n    calculateContainerWidth(totalBoards){\n        const windowWidth = window.innerWidth;\n        let width = (windowWidth <= 600)? ((totalBoards + 1) * windowWidth) - 30 : null;\n        return  width? width+\"px\": null;\n    }\n\n    calculateHolderWidth(totalBoards){\n        const windowWidth = window.innerWidth;\n        let width = null;\n        if(windowWidth > 1000) {\n            width = (totalBoards+1) * 450;\n        } else {\n            if(windowWidth > 600) {\n                width = (totalBoards+1) * 350;\n            } else {\n                width = ((totalBoards+1) * windowWidth) - 20;\n            }\n        }\n        return  width? width+\"px\": null;\n    }\n\n    onAddNewBoard = () => {\n        const newState = {\n            ...this.state,\n            showModal: true,\n            modalTitle: \"Add New Board\",\n            modalBody: <CreateForm\n                onSubmit={this.createNewBoard}\n                onCancel={this.hideModal}/>\n        }\n        this.setState(newState);\n    }\n\n    createNewBoard = board => {\n        addNewBoard(this.props.uid, this.props.wallId, board.title, board.description, e=>{\n            if(!e){\n                this.hideModal();\n            }\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label className={classes.Label}><i className={\"fa fa-th-large\"}/>&nbsp;<b>Boards In This Wall:</b></label>\n                <div className={classes.Collection} style={{\n                    minHeight: (window.innerHeight - 50)+\"px\"\n                }}>\n                    {this.state.holder}\n                    <PropagateLoader\n                        css={`\n                            margin-left:50%\n                        `}\n                        size={20}\n                        color={\"#aaa\"}\n                        loading={this.state.holder === null}\n                    />\n                </div>\n                <AppModal\n                    show={this.state.showModal}\n                    onHide={this.hideModal}\n                    title={this.state.modalTitle}>\n                    {this.state.modalBody}\n                </AppModal>\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default Boards;","export const Pages = {\n    WALL: \"WALL\",\n    BOARD: \"BOARD\"\n}","import React, {Component} from \"react\";\nimport Walls from \"../../Application/Walls/Walls\";\nimport Boards from \"../../Application/Boards/Boards\";\nimport {Pages} from \"../Pages\";\n\nclass Dash extends Component{\n\n    state={\n        component: <React.Fragment/>,\n        page: Pages.WALL,\n        wid: null\n    }\n\n    componentDidMount() {\n        this.onListWalls();\n        // switch (this.state.page) {\n        //     case Pages.WALL:\n        //         this.onListWalls();\n        //         break;\n        //     case Pages.BOARD:\n        //         this.onExploreProjectWall(this.state.wid)\n        //         break;\n        // }\n    }\n\n    onListWalls = () => {\n        this.setState({\n            component: <Walls uid={this.props.uid} onExploreProjectWall={this.onExploreProjectWall}/>,\n            page: Pages.WALL,\n        })\n    }\n\n    onExploreProjectWall = wallId => {\n        this.setState({\n            component: <Boards uid={this.props.uid} wallId={wallId}/>,\n            page: Pages.BOARD,\n            wid: wallId\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.component}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Dash;","import React from \"react\";\nimport boards from \"./boards.svg\";\nimport {Alert} from \"react-bootstrap\";\nimport \"./app-layout.css\";\n\nfunction AppLayout(props){\n    return (\n        <React.Fragment>\n            <header id={\"App-Header\"} className={props.isUserLoggedIn && \"logged-in\"}>\n                <h1 id={\"App-Name\"} className={props.isUserLoggedIn && \"logged-in\"}>{props.appName}</h1>\n                {props.menus}\n            </header>\n            <img src={boards} id={\"App-Logo\"} alt=\"logo\" />\n            {props.alertMessage !== null && (\n                <div>\n                    <Alert className={\"Alert\"} variant={props.messageVariant} onClose={props.onClearMessage} dismissible>\n                        {props.alertMessage}\n                    </Alert>\n                </div>\n            )}\n            <div id={\"App-Content\"} className={props.isUserLoggedIn && \"logged-in\"}>\n                {props.children}\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default AppLayout;","import React from \"react\";\nimport \"./app-menus.css\";\nimport {BounceLoader} from \"react-spinners\";\nimport {Dropdown} from \"react-bootstrap\";\nimport {Label} from \"@blueprintjs/core\";\n\nfunction AppMenus(props) {\n    const name = props.userInfo && (props.userInfo.name || props.userInfo.email).split(\" \");\n    const label = props.userInfo && (name[0].charAt(0) + (name[1]?name[1].charAt(0):\"\")).toUpperCase();\n    return (\n        <span className={\"menus\"}>\n            {props.userInfo && (\n                <React.Fragment>\n                    <i className=\"fa fa-tachometer tachometer\" aria-hidden=\"true\"/>\n                    <i className=\"fa fa-bell notification-bell\" aria-hidden=\"true\"/>\n                </React.Fragment>\n            )}\n            <Dropdown className={\"label-dropdown\"}>\n              <Dropdown.Toggle variant=\"default\" id=\"dropdown-basic\" style={{\n                  backgroundColor:\"transparent\",\n                  boxShadow:\"none\"\n              }}>\n                <Label className={\"user-label\"}>\n                    {label}\n                    <BounceLoader\n                        size={28}\n                        color={\"#eee\"}\n                        loading={label === null}\n                    />\n                </Label>\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={props.onUserLogOut}>Logout</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n        </span>\n    )\n}\n\nexport default AppMenus;","import React from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport \"./ua-menus.css\";\n\nfunction UAMenus(props) {\n    return (\n        <React.Fragment>\n            {/*for web browsers*/}\n            <span id={\"l-logInBtn\"} onClick={props.onLoginAction}>login</span>\n            <span id={\"l-registerBtn\"} onClick={props.onRegistrationAction}>register</span>\n            {/*for mobile devices*/}\n            <Button id={\"logInBtn\"} type={\"button\"} variant={\"dark\"} className={\"mr-2 sm-2\"} onClick={props.onLoginAction}>Login <i className={\"fa fa-sign-in\"}/></Button>\n            <Button id={\"registerBtn\"} type={\"button\"} variant={\"dark\"} className={\"mr-2 sm-2\"} onClick={props.onRegistrationAction}>Register <i className={\"fa fa-id-card\"}/></Button>\n        </React.Fragment>\n    )\n}\n\nexport default UAMenus;","import React, {Component} from \"react\";\nimport formLayout from \"./form-layout.svg\";\nimport classes from \"./login-form.module.css\"\n\nclass LoginForm extends Component {\n\n    state = {\n        user: this.props.loginEmail,\n        password: \"\"\n    }\n\n    loginInfoChanged = (event) => {\n        const item = event.target.name;\n        this.setState({\n            ...this.state,\n            [item]: event.target.value\n        })\n    }\n\n    clearForm = ()=>{\n        this.setState({\n            user: \"\",\n            password: \"\"\n        });\n    }\n\n    onLoginCancelled = () => {\n        this.clearForm();\n        this.props.onLoginCancelled();\n    }\n\n    render() {\n        return (\n            <form className={classes.Form} onSubmit={(event) => {\n                event.preventDefault();\n                this.props.onLogin({user: this.state.user, password: this.state.password});\n                this.clearForm();\n            }}>\n                <img src={formLayout} className={classes.Layout}  alt={\"login-form-layout\"} />\n                <input type={\"email\"} name={\"user\"} className={classes.user} placeholder={\"Email\"} onChange={this.loginInfoChanged} value={this.state.user}/><br/>\n                <input type={\"password\"} name={\"password\"} className={classes.password} placeholder={\"Password\"} onChange={this.loginInfoChanged} value={this.state.password}/><br/>\n                <button type={\"submit\"} className={classes.login}>LOGIN</button><br/>\n                <button type={\"button\"} className={classes.sso} onClick={this.props.onLoginWithGoogle}><i style={{\n                    \"color\":\"#4285f4\",\n                    backgroundColor: \"white\",\n                    padding: \"5px\",\n                    borderRadius: \"15px\"\n                }} className={\"fa fa-google\"}/>&nbsp;&nbsp;Login with Google</button>\n                <span className={\"btn btn-link \"+classes.cancel} onClick={this.onLoginCancelled}>Cancel</span>\n            </form>\n        )\n    }\n}\n\nexport default LoginForm;","import React, {Component} from \"react\";\nimport formLayout from \"./form-layout.svg\";\nimport classes from \"./register-form.module.css\"\n\nclass RegisterForm extends Component {\n\n    state = {\n        name: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirm: \"\"\n    }\n\n    userInfoChanged = (event) => {\n        const item = event.target.name;\n        this.setState({\n            ...this.state,\n            [item]: event.target.value\n        })\n    }\n\n    clearForm = ()=>{\n        this.setState({\n            name: \"\",\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            confirm: \"\"\n        });\n    }\n\n    onRegistrationCancelled = () => {\n        this.clearForm();\n        this.props.onRegistrationCancelled();\n    }\n\n    render() {\n        return (\n            <form className={classes.Form} onSubmit={(event) => {\n                event.preventDefault();\n                if(this.state.password === this.state.confirm) {\n                    this.props.onRegister({\n                        name: this.state.name.trim(),\n                        username: this.state.username.trim(),\n                        email: this.state.email,\n                        password: this.state.password\n                    });\n                    this.clearForm();\n                }else{\n                    this.props.onRegistrationRejected(\"Failed to confirm password\");\n                }\n            }}>\n                <img src={formLayout} className={classes.Layout}  alt={\"registration-form-layout\"} />\n                <input type={\"text\"} name={\"name\"} className={classes.name} placeholder={\"Full Name\"} onChange={this.userInfoChanged} value={this.state.name} pattern={\"^ *[a-zA-Z]+ +([a-zA-Z]+ +|)[a-zA-Z]+ *$\"}/><br/>\n                <input type={\"text\"} name={\"username\"} className={classes.username} placeholder={\"Username\"} onChange={this.userInfoChanged} value={this.state.username} pattern={\"^ *[a-zA-Z0-9]{4,} *$\"}/><br/>\n                <input type={\"email\"} name={\"email\"} className={classes.email} placeholder={\"Email\"} onChange={this.userInfoChanged} value={this.state.email}/><br/>\n                <input type={\"password\"} name={\"password\"} className={classes.password} placeholder={\"Password\"} onChange={this.userInfoChanged} value={this.state.password} pattern={\"^ *[a-zA-Z0-9 ]{6,} *$\"}/><br/>\n                <input type={\"password\"} name={\"confirm\"} className={classes.confirm} placeholder={\"Confirm\"} onChange={this.userInfoChanged} value={this.state.confirm}/><br/>\n                <button type={\"submit\"} className={classes.register}>REGISTER</button><br/>\n                <button type={\"button\"} className={classes.sso} onClick={this.props.onRegisterWithGoogle}><i style={{\n                    \"color\":\"#4285f4\",\n                    backgroundColor: \"white\",\n                    padding: \"5px\",\n                    borderRadius: \"15px\"\n                }} className={\"fa fa-google\"}/>&nbsp;&nbsp;Login with Google</button>\n                <span className={\"btn btn-link \"+classes.cancel} onClick={this.onRegistrationCancelled}>Cancel</span>\n            </form>\n        )\n    }\n}\n\nexport default RegisterForm;","import React, {Component} from \"react\";\nimport LoginForm from \"./Login/LoginForm\";\nimport RegisterForm from \"./Register/RegisterForm\";\nimport CryptoJS from \"crypto-js\";\nimport {loginWithEmailAndPassword, loginWithGoogle, register} from \"../../../api/service/UAC\";\n\nclass UAForms extends Component{\n\n    onLogin = (loginInfo) => {\n        loginWithEmailAndPassword(loginInfo, this.onUserLoggedIn, this.props.onLoginFailed);\n    }\n\n    onLoginWithGoogle = () => {\n        loginWithGoogle(this.onUserLoggedIn, this.props.onLoginFailed);\n    }\n\n    onUserLoggedIn = (user, userInfo) => {\n        localStorage.setItem(\"c-us\", CryptoJS.AES.encrypt(user.uid, \"nnDZyHWCkWEf2teEisnwafQTz365HKs9TrGwwtXQgLPeV2fw\"));\n        this.props.onUserLoggedIn(user, userInfo);\n    }\n\n    onRegister = (userInfo) => {\n        register(userInfo, this.props.onUserRegistered, this.props.onRegistrationFailed)\n    }\n\n    render() {\n        return this.props.showLoginForm ? (\n            <LoginForm\n                loginEmail={this.props.loginEmail}\n                onLoginCancelled={this.props.onLoginCancelled}\n                onLogin={this.onLogin}\n                onLoginWithGoogle={this.onLoginWithGoogle} />\n        ) : this.props.showRegistrationForm && (\n            <RegisterForm\n                onRegistrationCancelled={this.props.onRegistrationCancelled}\n                onRegistrationRejected={this.props.onRegistrationRejected}\n                onRegister={this.onRegister}\n                onRegisterWithGoogle={this.onLoginWithGoogle} />\n        )\n    }\n}\nexport default UAForms;","import React, {Component} from 'react';\nimport './App.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ServiceDisplay from \"./components/LandingPage/ServiceDisplay/ServiceDisplay\";\nimport {fetchUserInfo} from \"./api/service/UAC\";\nimport Dash from \"./components/HomePage/Dash/Dash\";\nimport CryptoJS from \"crypto-js\";\nimport AppLayout from \"./hoc/AppLayout/AppLayout\";\nimport AppMenus from \"./components/HomePage/AppMenus/AppMenus\";\nimport UAMenus from \"./components/LandingPage/UA/UAMenus\";\nimport UAForms from \"./components/LandingPage/UA/UAForms\";\n\nclass App extends Component{\n\n    state = {\n        loginEmail: null,\n        showLoginForm: false,\n        showRegistrationForm: false,\n        alertMessage: null,\n        messageVariant: \"\",\n        // TODO\n        currentUserId:\n            // \"dummy\",\n            (localStorage.getItem(\"c-us\")||null) !== null ?\n            CryptoJS.AES.decrypt(localStorage.getItem(\"c-us\"), \"nnDZyHWCkWEf2teEisnwafQTz365HKs9TrGwwtXQgLPeV2fw\")\n                .toString(CryptoJS.enc.Utf8):null,\n        currentUser:\n            null\n            // { name: \"John Doe\" }\n    }\n\n    componentDidMount() {\n        if(this.state.currentUser === null && this.state.currentUserId !== null){\n            fetchUserInfo(this.state.currentUserId, userInfo => {\n                this.setState({\n                    ...this.state,\n                    currentUser: userInfo\n                });\n            })\n        }\n    }\n\n    onLoginAction = (email) => {\n        this.setState({\n            ...this.state,\n            loginEmail: typeof email === 'string' ? email : \"\" ,\n            showLoginForm: !this.state.showLoginForm,\n            showRegistrationForm: false\n        });\n    }\n\n    onRegistrationAction = () => {\n        this.setState({\n            ...this.state,\n            showLoginForm: false,\n            showRegistrationForm: !this.state.showRegistrationForm\n        });\n    }\n\n    onUserLoggedIn = (user, userInfo) => {\n        this.setState({\n            ...this.state,\n            currentUserId: user.uid,\n            currentUser: userInfo || user,\n            message: \"Welcome, \"+(userInfo? userInfo.name : user.email),\n            messageVariant: \"success\"\n        })\n    }\n\n    onUserRegistered = (user) => {\n        this.displayMessage((\n            <React.Fragment>Account created successfully.\n                <b\n                    style={{cursor:\"pointer\"}}\n                    onClick={()=>{this.handleLogin(user.email);}}\n                >\n                    login now\n                </b>\n            </React.Fragment>\n        ), \"success\");\n    }\n\n    hideLoginForm = () => {\n        this.setState({\n            ...this.state,\n            showLoginForm: false\n        });\n    }\n\n    hideRegistrationForm = () => {\n        this.setState({\n            ...this.state,\n            showRegistrationForm: false\n        });\n    }\n\n    displayMessage = (message, variant) => {\n        this.setState({\n            ...this.state,\n            message: message,\n            messageVariant: variant\n        })\n    }\n\n    clearMessage = () => {\n        this.setState({\n            ...this.state,\n            alertMessage: null\n        })\n    }\n\n    getMenus = () => {\n        return this.state.currentUserId ? (\n            <AppMenus\n                userInfo={this.state.currentUser}\n                onUserLogOut={()=>{\n                    localStorage.removeItem(\"c-us\");\n                    this.setState({\n                        ...this.state,\n                        currentUserId: null,\n                        currentUser: null\n                    })\n                }}\n            />\n        ):(\n            <UAMenus\n                onLoginAction={this.onLoginAction}\n                onRegistrationAction={this.onRegistrationAction}\n            />\n        );\n    }\n\n    getContent = () => {\n        return this.state.currentUserId?(\n            <Dash uid={this.state.currentUserId}/>\n        ):(\n            <ServiceDisplay\n                onLoginAction={this.onLoginAction}\n                onRegistrationAction={this.onRegistrationAction}\n            >\n                <p>Smart Management of tasks you care.</p>\n                <p>Get your activities in track.</p>\n                <p>Automation on your ease.</p>\n                <p>Analytical Reports for better control.</p>\n            </ServiceDisplay>\n        );\n    }\n\n    getUAForms = () => {\n        return this.state.currentUserId === null && (\n            <UAForms\n                loginEmail={this.state.loginEmail}\n                showLoginForm={this.state.showLoginForm}\n                showRegistrationForm={this.state.showRegistrationForm}\n                onUserLoggedIn={this.onUserLoggedIn}\n                onUserRegistered={this.onUserRegistered}\n                onLoginCancelled={this.hideLoginForm}\n                onRegistrationCancelled={this.hideRegistrationForm}\n                onLoginFailed={failureMessage => this.displayMessage(failureMessage, \"danger\")}\n                onRegistrationFailed={failureMessage => this.displayMessage(failureMessage, \"danger\")}\n                onRegistrationRejected={detail => this.displayMessage(detail, \"danger\")}\n            />\n        )\n    }\n\n    render = () => {\n        return (\n            <div className={\"App\"}>\n                <AppLayout\n                    appName={\"SMART TASK MANAGEMENT\"}\n                    isUserLoggedIn={this.state.currentUserId}\n                    menus={this.getMenus()}\n                    alertMessage={this.state.alertMessage}\n                    messageVariant={this.state.messageVariant}\n                    onClearMessage={this.clearMessage}\n                >\n                    {this.getContent()}\n                    {this.getUAForms()}\n                </AppLayout>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"login-form_Form__2KfcH\",\"Layout\":\"login-form_Layout__3LGCR\",\"user\":\"login-form_user__U_4rj\",\"password\":\"login-form_password__lSTAt\",\"login\":\"login-form_login__1i53C\",\"sso\":\"login-form_sso__2MUjQ\",\"cancel\":\"login-form_cancel__Fb3IL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"walls_Label__3YTu0\",\"Dash\":\"walls_Dash__1HI1E\",\"row\":\"walls_row__2X5R7\",\"Card\":\"walls_Card__2P4_0\",\"AddIcon\":\"walls_AddIcon__38eBJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Board\":\"board_Board__2e8Ff\",\"NewBoard\":\"board_NewBoard__1sAKZ\",\"Title\":\"board_Title__1dqbj\",\"DropSuggestion\":\"board_DropSuggestion__3E-ns\",\"Delete\":\"board_Delete__1odI5\",\"Edit\":\"board_Edit__3GNqA\"};"],"sourceRoot":""}