{"version":3,"sources":["components/Dash/Dash.module.css","images/boards.svg","components/UA/Login/form-layout.svg","components/ServiceBroadCaster/ServiceBroadCaster.module.css","components/UA/Register/form-layout.svg","components/UA/Register/register-form.module.css","components/UA/Login/login-form.module.css","components/UA/Login/LoginForm.js","components/arrayShuffle/arrayShuffle.js","components/ServiceBroadCaster/ServiceBroadCaster.js","api/base.js","api/service/UAC.js","components/UA/Register/RegisterForm.js","components/Dash/Dash.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoginForm","state","user","props","loginEmail","password","loginInfoChanged","event","item","target","name","setState","value","clearForm","onLoginCancelled","className","classes","Form","onSubmit","preventDefault","onLogin","src","formLayout","Layout","alt","type","placeholder","onChange","this","login","sso","onClick","onLoginWithGoogle","style","backgroundColor","padding","borderRadius","cancel","Component","shuffle","array","counter","length","index","Math","floor","random","temp","ServiceBroadCaster","servicesToDisplay","displayServices","chars","arrayShuffle","services","join","split","i","string","Fragment","updateServices","interval","setInterval","concatElement","handleLogin","handleRegister","clearInterval","el1","el2","el","id","render","serviceBroadcastArea","app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","base","googleAuthProvider","GoogleAuthProvider","loginWithEmailAndPassword","loginInfo","onSuccess","onFailure","auth","fetchSignInMethodsForEmail","then","providers","indexOf","signInWithEmailAndPassword","response","ref","uid","once","snapshot","val","catch","error","console","log","loginWithGoogle","signInWithPopup","result","register","createUserWithEmailAndPassword","email","set","username","onAuthStateChanged","RegisterForm","confirm","userInfoChanged","onRegistrationCancelled","onRegister","trim","onRegistrationRejected","pattern","onRegisterWithGoogle","Dash","WallCard","Card","AddIcon","App","showLoginForm","showRegistrationForm","message","messageVariant","currentUserId","localStorage","getItem","CryptoJS","AES","decrypt","toString","enc","Utf8","currentUser","clearErrorMessage","getUserLabel","charAt","toUpperCase","onScroll","Button","variant","aria-hidden","boards","Alert","onClose","dismissible","userInfo","setItem","encrypt","failureMessage","cursor","callback","on","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3903f400.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dash\":\"Dash_Dash__3AZTs\",\"row\":\"Dash_row__1ZId8\",\"Card\":\"Dash_Card__2UTLE\",\"WallCard\":\"Dash_WallCard__1wCL1\",\"AddIcon\":\"Dash_AddIcon__2qA4z\"};","module.exports = __webpack_public_path__ + \"static/media/boards.e1a1bef5.svg\";","module.exports = __webpack_public_path__ + \"static/media/form-layout.7b97f5e3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"serviceBroadcastArea\":\"ServiceBroadCaster_serviceBroadcastArea__1qM-S\"};","module.exports = __webpack_public_path__ + \"static/media/form-layout.9304ee21.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"register-form_Form__2zdfV\",\"Layout\":\"register-form_Layout__deJbg\",\"name\":\"register-form_name__31IhC\",\"username\":\"register-form_username__3xaxu\",\"email\":\"register-form_email__25IeG\",\"password\":\"register-form_password__cCwGZ\",\"confirm\":\"register-form_confirm__3jpVV\",\"register\":\"register-form_register__3HScJ\",\"sso\":\"register-form_sso__3j8Aq\",\"cancel\":\"register-form_cancel__1y0sm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"login-form_Form__1-eTo\",\"Layout\":\"login-form_Layout__1cKCg\",\"user\":\"login-form_user__3jFEV\",\"password\":\"login-form_password__2hrWx\",\"login\":\"login-form_login__1RFxL\",\"sso\":\"login-form_sso__14RBy\",\"cancel\":\"login-form_cancel__3xtjE\"};","import React, {Component} from \"react\";\nimport formLayout from \"./form-layout.svg\";\nimport classes from \"./login-form.module.css\"\n\nclass LoginForm extends Component {\n\n    state = {\n        user: this.props.loginEmail,\n        password: \"\"\n    }\n\n    loginInfoChanged = (event) => {\n        const item = event.target.name;\n        this.setState({\n            ...this.state,\n            [item]: event.target.value\n        })\n    }\n\n    clearForm = ()=>{\n        this.setState({\n            user: \"\",\n            password: \"\"\n        });\n    }\n\n    onLoginCancelled = () => {\n        this.clearForm();\n        this.props.onLoginCancelled();\n    }\n\n    render() {\n        return (\n            <form className={classes.Form} onSubmit={(event) => {\n                event.preventDefault();\n                this.props.onLogin({user: this.state.user, password: this.state.password});\n                this.clearForm();\n            }}>\n                <img src={formLayout} className={classes.Layout}  alt={\"login-form-layout\"} />\n                <input type={\"email\"} name={\"user\"} className={classes.user} placeholder={\"Email\"} onChange={this.loginInfoChanged} value={this.state.user}/><br/>\n                <input type={\"password\"} name={\"password\"} className={classes.password} placeholder={\"Password\"} onChange={this.loginInfoChanged} value={this.state.password}/><br/>\n                <button type={\"submit\"} className={classes.login}>LOGIN</button><br/>\n                <button type={\"button\"} className={classes.sso} onClick={this.props.onLoginWithGoogle}><i style={{\n                    \"color\":\"#4285f4\",\n                    backgroundColor: \"white\",\n                    padding: \"5px\",\n                    borderRadius: \"15px\"\n                }} className={\"fa fa-google\"}/>&nbsp;&nbsp;Login with Google</button>\n                <span className={\"btn btn-link \"+classes.cancel} onClick={this.onLoginCancelled}>Cancel</span>\n            </form>\n        )\n    }\n}\n\nexport default LoginForm;","export default function shuffle(array) {\n    let counter = array.length;\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        let index = Math.floor(Math.random() * counter);\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element with it\n        let temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n    return array;\n}","import React, {Component} from \"react\";\nimport arrayShuffle from \"../arrayShuffle/arrayShuffle\";\nimport classes from \"./ServiceBroadCaster.module.css\";\n\nclass ServiceBroadCaster extends Component {\n\n    state = {\n        servicesToDisplay: null\n    }\n\n    componentDidMount() {\n        this.displayServices();\n    }\n\n    displayServices = () => {\n        const chars = arrayShuffle(this.props.services).join('').split('');\n        let i = 0;\n        let string = <React.Fragment><i className={\"fa fa-hand-o-right\"}/> </React.Fragment>;\n        this.updateServices(string);\n        const interval = setInterval(()=>{\n            if(i < chars.length) {\n                string = this.concatElement(string, chars[i]);\n                this.updateServices(string);\n                if(chars[i] === '.' && i < chars.length-1){\n                    string = this.concatElement(string, <br/>);\n                    string = this.concatElement(string, <React.Fragment><i className={\"fa fa-hand-o-right\"}/> </React.Fragment>);\n                    this.updateServices(string);\n                }\n                i++;\n            } else {\n                string = this.concatElement(string, <br/>);\n                string = this.concatElement(string, <React.Fragment><i className={\"fa fa-hand-o-right\"}/> </React.Fragment>);\n                string = this.concatElement(string, <React.Fragment><span className={'btn btn-link'} onClick={this.props.handleLogin}>Login</span> or <span className={'btn btn-link'} onClick={this.props.handleRegister}>Register</span> to begin..</React.Fragment>);\n                this.updateServices(string);\n                clearInterval(interval);\n            }\n        },100);\n    }\n\n    concatElement = (el1, el2)=>{\n        return <React.Fragment>{el1}{el2}</React.Fragment>\n    }\n\n    updateServices = (el) => {\n        this.setState({\n            servicesToDisplay : <React.Fragment>{el} <b id={'display-cursor'}> _</b></React.Fragment>\n        })\n    }\n\n    render = () => {\n        return (\n            <p className={classes.serviceBroadcastArea}>\n                {this.state.servicesToDisplay}\n            </p>\n        );\n    }\n}\n\nexport default ServiceBroadCaster;","// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport * as firebase from \"firebase/app\";\n\n// Add the Firebase services that you want to use\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\nimport \"firebase/database\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDQSL_YD4ndOnhBDm-UWao9XkkAnXVG7Ww\",\n    authDomain: \"smart-pms-1797e.firebaseapp.com\",\n    databaseURL: \"https://smart-pms-1797e.firebaseio.com\",\n    projectId: \"smart-pms-1797e\",\n    storageBucket: \"smart-pms-1797e.appspot.com\",\n    messagingSenderId: \"97961959988\",\n    appId: \"1:97961959988:web:6d87fd4bcc221bf50f2061\",\n    measurementId: \"G-2KTZ0JQCHX\"\n};\n// Initialize Firebase\nconst app = firebase.initializeApp(firebaseConfig);\nconst base = firebase.database();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nlet currentUserId = null;\nfirebase.auth().onAuthStateChanged((user)=>{\n    if(user){\n        currentUserId = user.uid;\n    }\n})\nfirebase.analytics();\nexport {app, base, googleAuthProvider, currentUserId};","import {app, base, googleAuthProvider} from \"../base\";\n\nexport function loginWithEmailAndPassword(loginInfo, onSuccess, onFailure) {\n    app.auth().fetchSignInMethodsForEmail(loginInfo.user).then((providers) => {\n        if(providers.length === 0){\n            // return app.auth().createUserWithEmailAndPassword(loginInfo.user, this.state.password);\n            return false;\n        }else if(providers.indexOf(\"password\") === -1){\n            return null;\n        }else{\n            return app.auth().signInWithEmailAndPassword(loginInfo.user, loginInfo.password);\n        }\n    }).then(response=>{\n        if(response === null){\n            onFailure(\"user other method for login\");\n        }else if (response === false){\n            onFailure(\"username or password not valid\");\n        }else if ('user' in response){\n            base.ref('/users/' + response.user.uid).once('value').then(function(snapshot) {\n                onSuccess(response.user, snapshot.val());\n            });\n        }\n    }).catch(error=>console.log(error));\n}\n\nexport function fetchUserInfo(uid, callback) {\n    base.ref('/users/' + uid).on('value', function(snapshot) {\n        callback(snapshot.val());\n    });\n}\n\nexport function loginWithGoogle(onSuccess, onFailure) {\n    app.auth().signInWithPopup(googleAuthProvider).then((result, error)=>{\n        if(error){\n            onFailure(\"Authentication Failed. Try other way to log in\");\n        }else{\n            onSuccess(result.user);\n        }\n    })\n}\n\nexport function register(user, onSuccess, onFailure) {\n    app.auth().createUserWithEmailAndPassword(user.email, user.password).then((result, error) =>{\n        if(error){\n            onFailure(\"Failed to create account\");\n        }else{\n            if(result.user !== null && result.user.uid !== null) {\n                base.ref('users/' + result.user.uid).set({\n                    name: user.name,\n                    username: user.username\n                });\n                onSuccess(result.user);\n            }\n        }\n    })\n}","import React, {Component} from \"react\";\nimport formLayout from \"./form-layout.svg\";\nimport classes from \"./register-form.module.css\"\n\nclass RegisterForm extends Component {\n\n    state = {\n        name: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirm: \"\"\n    }\n\n    userInfoChanged = (event) => {\n        const item = event.target.name;\n        this.setState({\n            ...this.state,\n            [item]: event.target.value\n        })\n    }\n\n    clearForm = ()=>{\n        this.setState({\n            name: \"\",\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            confirm: \"\"\n        });\n    }\n\n    onRegistrationCancelled = () => {\n        this.clearForm();\n        this.props.onRegistrationCancelled();\n    }\n\n    render() {\n        return (\n            <form className={classes.Form} onSubmit={(event) => {\n                event.preventDefault();\n                if(this.state.password === this.state.confirm) {\n                    this.props.onRegister({\n                        name: this.state.name.trim(),\n                        username: this.state.username.trim(),\n                        email: this.state.email,\n                        password: this.state.password\n                    });\n                    this.clearForm();\n                }else{\n                    this.props.onRegistrationRejected(\"Failed to confirm password\");\n                }\n            }}>\n                <img src={formLayout} className={classes.Layout}  alt={\"registration-form-layout\"} />\n                <input type={\"text\"} name={\"name\"} className={classes.name} placeholder={\"Full Name\"} onChange={this.userInfoChanged} value={this.state.name} pattern={\"^ *[a-zA-Z]+ +([a-zA-Z]+ +|)[a-zA-Z]+ *$\"}/><br/>\n                <input type={\"text\"} name={\"username\"} className={classes.username} placeholder={\"Username\"} onChange={this.userInfoChanged} value={this.state.username} pattern={\"^ *[a-zA-Z0-9]{4,} *$\"}/><br/>\n                <input type={\"email\"} name={\"email\"} className={classes.email} placeholder={\"Email\"} onChange={this.userInfoChanged} value={this.state.email}/><br/>\n                <input type={\"password\"} name={\"password\"} className={classes.password} placeholder={\"Password\"} onChange={this.userInfoChanged} value={this.state.password} pattern={\"^ *[a-zA-Z0-9 ]{6,} *$\"}/><br/>\n                <input type={\"password\"} name={\"confirm\"} className={classes.confirm} placeholder={\"Confirm\"} onChange={this.userInfoChanged} value={this.state.confirm}/><br/>\n                <button type={\"submit\"} className={classes.register}>REGISTER</button><br/>\n                <button type={\"button\"} className={classes.sso} onClick={this.props.onRegisterWithGoogle}><i style={{\n                    \"color\":\"#4285f4\",\n                    backgroundColor: \"white\",\n                    padding: \"5px\",\n                    borderRadius: \"15px\"\n                }} className={\"fa fa-google\"}/>&nbsp;&nbsp;Login with Google</button>\n                <span className={\"btn btn-link \"+classes.cancel} onClick={this.onRegistrationCancelled}>Cancel</span>\n            </form>\n        )\n    }\n}\n\nexport default RegisterForm;","import React, {Component} from \"react\";\nimport classes from \"./Dash.module.css\"\n\nclass Dash extends Component {\n    render() {\n        return (\n            <div className={\"col-md-12 col-sm-12 container \" + classes.Dash}>\n                <label style={{\n\n                }}><i className={\"fa fa-th-large\"}/>&nbsp;<b>Your Project Walls:</b></label>\n                <div className={\"row\"}>\n                    <div className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                        <span className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.WallCard}>Task Management</span>\n                    </div>\n                    <div className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                        <span className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.WallCard}>Task Management</span>\n                    </div>\n                    <div className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                        <span className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.WallCard}>Task Management</span>\n                    </div>\n                    <div className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                        <span className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.WallCard}>Task Management</span>\n                    </div>\n                    <div className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                        <span className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.WallCard}>Task Management</span>\n                    </div>\n                    <div className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                        <span className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.WallCard}>Task Management</span>\n                    </div>\n                    <div className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                        <span className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.WallCard}>Task Management</span>\n                    </div>\n                    <div className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                        <span className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.WallCard}>Task Management</span>\n                    </div>\n                    <div className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                        <span className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.WallCard}>Task Management</span>\n                    </div>\n                    <div className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                        <span className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.WallCard}>Task Management</span>\n                    </div>\n                    <div className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                        <span className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.WallCard}>Task Management</span>\n                    </div>\n                    <div className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                        <span className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.Card}>\n                            <i className={\"fa fa-plus \"+classes.AddIcon}/><br/>\n                            Create New Project Wall\n                        </span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dash;","import React, {Component} from 'react';\nimport './App.css';\nimport boards from './images/boards.svg';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Alert, Button} from 'react-bootstrap';\nimport LoginForm from \"./components/UA/Login/LoginForm\";\nimport ServiceBroadCaster from \"./components/ServiceBroadCaster/ServiceBroadCaster\";\nimport {fetchUserInfo, loginWithEmailAndPassword, loginWithGoogle, register} from \"./api/service/UAC\";\nimport RegisterForm from \"./components/UA/Register/RegisterForm\";\nimport Dash from \"./components/Dash/Dash\";\nimport CryptoJS from \"crypto-js\";\n\nclass App extends Component{\n\n    state = {\n        loginEmail: null,\n        showLoginForm: false,\n        showRegistrationForm: false,\n        message: null,\n        messageVariant: \"\",\n        // TODO\n        currentUserId:\n            // \"dummy\",\n            (localStorage.getItem(\"c-us\")||null) !== null ?\n            CryptoJS.AES.decrypt(localStorage.getItem(\"c-us\"), \"nnDZyHWCkWEf2teEisnwafQTz365HKs9TrGwwtXQgLPeV2fw\")\n                .toString(CryptoJS.enc.Utf8):null,\n        currentUser:\n            null\n            // { name: \"John Doe\" }\n    }\n\n    componentDidMount() {\n        if(this.state.currentUser === null && this.state.currentUserId !== null){\n            fetchUserInfo(this.state.currentUserId, userInfo => {\n                this.setState({\n                    ...this.state,\n                    currentUser: userInfo\n                });\n            })\n        }\n    }\n\n    handleLogin = (email) => {\n        this.setState({\n            ...this.state,\n            loginEmail: typeof email === 'string' ? email : \"\" ,\n            showLoginForm: !this.state.showLoginForm,\n            showRegistrationForm: false\n        });\n    }\n\n    onLoginCancelled = () => {\n        this.setState({\n            ...this.state,\n            showLoginForm: false\n        });\n    }\n\n    handleRegister = () => {\n        this.setState({\n            ...this.state,\n            showLoginForm: false,\n            showRegistrationForm: !this.state.showRegistrationForm\n        });\n    }\n\n    onRegistrationCancelled = () => {\n        this.setState({\n            ...this.state,\n            showRegistrationForm: false\n        });\n    }\n\n    onRegistrationRejected = (message) => {\n        this.setState({\n            ...this.state,\n            message: message,\n            messageVariant: \"danger\"\n        })\n    }\n\n    clearErrorMessage = () => {\n        this.setState({\n            ...this.state,\n            message: null\n        })\n    }\n\n    getUserLabel = () => {\n        const name = this.state.currentUser.name.split(\" \");\n        return (name[0].charAt(0) + name[1].charAt(0)).toUpperCase();\n    }\n\n    render = () => {\n        return (\n            <div className=\"App\" onScroll={event=>{console.log(event)}}>\n                <header className={\"App-header\"+(this.state.currentUserId !== null && \" logged-in\")}>\n                    <h1 id={\"app-header\"} className={this.state.currentUser !== null && \"logged-in\"}>SMART TASK MANAGEMENT</h1>\n                    {this.state.currentUserId === null && (\n                        <React.Fragment>\n                            {/*for web browsers*/}\n                            <span id={\"l-logInBtn\"} onClick={this.handleLogin}>login</span>\n                            <span id={\"l-registerBtn\"} onClick={this.handleRegister}>register</span>\n                            {/*for mobile devices*/}\n                            <Button id={\"logInBtn\"} type={\"button\"} variant={\"dark\"} className={\"mr-2 sm-2\"} onClick={this.handleLogin}>Login <i className={\"fa fa-sign-in\"}/></Button>\n                            <Button id={\"registerBtn\"} type={\"button\"} variant={\"dark\"} className={\"mr-2 sm-2\"} onClick={this.handleRegister}>Register <i className={\"fa fa-id-card\"}/></Button>\n                        </React.Fragment>\n                    )}\n                    {this.state.currentUser !== null && (\n                        <span className={\"menus\"}>\n                            <i className=\"fa fa-tachometer tachometer\" aria-hidden=\"true\"/>\n                            <i className=\"fa fa-bell notification-bell\" aria-hidden=\"true\"/>\n                            <label className={\"user-label\"}>{this.getUserLabel()}</label>\n                        </span>\n                    )}\n                </header>\n                <img src={boards} className={\"App-logo\"} alt=\"logo\" />\n                <div className={\"App-Content\"}>\n                    {this.state.message !== null && (\n                        <div>\n                            <Alert className={\"Alert\"} variant={this.state.messageVariant} onClose={this.clearErrorMessage} dismissible>\n                                {this.state.message}\n                            </Alert>\n                        </div>\n                    )}\n\n                    {/*TODO*/}\n                    {/*<Dash/>*/}\n                    {this.state.currentUserId === null ? (\n                        <ServiceBroadCaster services={[\n                            \"Smart Management of tasks you care.\",\n                            \"Get your activities in track.\",\n                            \"Automation on your ease.\",\n                            \"Analytical Reports for better control.\"\n                        ]}\n                                            handleLogin={this.handleLogin}\n                                            handleRegister={this.handleRegister} />\n                    ):(\n                        <Dash/>\n                    )}\n                </div>\n                    {this.state.showLoginForm && (\n                        <LoginForm\n                            loginEmail={this.state.loginEmail}\n                            onLoginCancelled={this.onLoginCancelled}\n                            onLogin={this.onLogin}\n                            onLoginWithGoogle={this.onLoginWithGoogle} />\n                    )}\n                    {this.state.showRegistrationForm && (\n                        <RegisterForm\n                            onRegistrationCancelled={this.onRegistrationCancelled}\n                            onRegistrationRejected={this.onRegistrationRejected}\n                            onRegister={this.onRegister}\n                            onRegisterWithGoogle={this.onLoginWithGoogle} />\n                    )}\n            </div>\n        );\n    }\n\n    onLogin = (loginInfo) => {\n        loginWithEmailAndPassword(loginInfo, (user, userInfo) => {\n            localStorage.setItem(\"c-us\", CryptoJS.AES.encrypt(user.uid, \"nnDZyHWCkWEf2teEisnwafQTz365HKs9TrGwwtXQgLPeV2fw\"));\n            this.setState({\n                ...this.state,\n                currentUserId: user.uid,\n                message: \"Welcome, \"+userInfo.name,\n                messageVariant: \"success\",\n                currentUser: userInfo\n            })\n        }, failureMessage => {\n            this.setState({\n                ...this.state,\n                message: failureMessage,\n                messageVariant: \"danger\"\n            })\n        });\n        this.onLoginCancelled();\n    }\n\n    onLoginWithGoogle = () => {\n        loginWithGoogle((user) => {\n            this.setState({\n                ...this.state,\n                currentUserId: user.uid,\n                message: \"Welcome, \" + user.email,\n                messageVariant: \"success\"\n            })\n        }, failureMessage => {\n            this.setState({\n                ...this.state,\n                message: failureMessage,\n                messageVariant: \"danger\"\n            })\n        });\n        this.onLoginCancelled();\n    }\n\n    onRegister = (userInfo) => {\n        register(userInfo, user => {\n            this.setState({\n                ...this.state,\n                message: <React.Fragment>Account created successfully. <b style={{cursor:\"pointer\"}} onClick={()=>{\n                    this.handleLogin(userInfo.email);\n                }}>login now</b></React.Fragment>,\n                messageVariant: \"success\"\n            })\n        }, failureMessage => {\n            this.setState({\n                ...this.state,\n                message: failureMessage,\n                messageVariant: \"danger\"\n            })\n        })\n        this.onRegistrationCancelled();\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}