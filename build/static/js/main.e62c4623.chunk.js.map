{"version":3,"sources":["images/boards.svg","components/UA/Login/form-layout.svg","components/ServiceBroadCaster/ServiceBroadCaster.module.css","components/UA/Register/form-layout.svg","components/Boards/BoardContainer/board-container.module.css","components/Boards/BoardHolder/board-holder.module.css","components/UA/Register/register-form.module.css","components/UA/Login/LoginForm.js","components/arrayShuffle/arrayShuffle.js","components/ServiceBroadCaster/ServiceBroadCaster.js","api/base.js","api/service/UAC.js","components/UA/Register/RegisterForm.js","api/service/Walls.js","components/AppModal/AppModal.js","components/Walls/Form/CreateWallForm.js","components/MdEditorConfig/MdEditorConfig.js","components/Walls/Walls.js","api/service/Boards.js","api/service/Cards.js","components/Cards/Form/CreateForm.js","components/Cards/Cards.js","components/Boards/Form/CreateForm.js","components/Boards/BoardContainer/BoardContainer.js","components/Boards/Board/Board.js","components/Boards/BoardHolder/BoardHolder.js","components/Boards/Boards.js","components/Pages.js","components/Dash/Dash.js","App.js","serviceWorker.js","index.js","components/UA/Login/login-form.module.css","components/Walls/walls.module.css","components/Boards/Board/board.module.css","components/Boards/boards.module.css","components/Cards/cards.module.css"],"names":["module","exports","LoginForm","state","user","props","loginEmail","password","loginInfoChanged","event","item","target","name","setState","value","clearForm","onLoginCancelled","className","classes","Form","onSubmit","preventDefault","onLogin","src","formLayout","Layout","alt","type","placeholder","onChange","this","login","sso","onClick","onLoginWithGoogle","style","backgroundColor","padding","borderRadius","cancel","Component","shuffle","array","counter","length","index","Math","floor","random","temp","ServiceBroadCaster","servicesToDisplay","displayServices","chars","arrayShuffle","services","join","split","i","string","Fragment","updateServices","interval","setInterval","concatElement","handleLogin","handleRegister","clearInterval","el1","el2","el","id","render","serviceBroadcastArea","app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","base","googleAuthProvider","GoogleAuthProvider","loginWithEmailAndPassword","loginInfo","onSuccess","onFailure","auth","fetchSignInMethodsForEmail","then","providers","indexOf","signInWithEmailAndPassword","response","ref","uid","once","snapshot","val","catch","error","console","log","loginWithGoogle","signInWithPopup","result","register","createUserWithEmailAndPassword","email","set","username","onAuthStateChanged","RegisterForm","confirm","userInfoChanged","onRegistrationCancelled","onRegister","trim","onRegistrationRejected","pattern","onRegisterWithGoogle","addNewWall","description","callback","wid","uuidv4","Date","toString","AppModal","Modal","show","onHide","backdrop","keyboard","title","Header","closeButton","Title","Body","children","buttons","Footer","CreateWallForm","$vm","React","createRef","onValueChanged","Group","Label","Control","required","toolbar","h1","h2","h3","h4","img","link","code","preview","expand","undo","redo","save","subfield","language","float","Button","variant","onCancel","Walls","totalWalls","walls","showModal","modalTitle","modalBody","hideModal","onCreateNewWall","newState","createNewWall","wall","e","map","key","WallCard","onExploreProjectWall","on","Dash","Card","AddIcon","addNewBoard","bid","addNewCard","cid","CreateForm","Cards","totalCards","cards","onCreateNewCard","createNewCard","card","fontSize","textAlign","BoardContainer","Container","width","Board","BoardHolder","Table","Boards","totalBoards","boards","holder","onAddNewBoard","createNewBoard","board","wallId","_boards","total","calculateContainerWidth","boardClasses","calculateHolderWidth","NewBoard","window","addEventListener","items","document","getElementsByClassName","windowWidth","innerWidth","Collection","Pages","component","page","onListWalls","App","showLoginForm","showRegistrationForm","message","messageVariant","currentUserId","localStorage","getItem","CryptoJS","AES","decrypt","enc","Utf8","currentUser","clearErrorMessage","getUserLabel","charAt","toUpperCase","onScroll","aria-hidden","Alert","onClose","dismissible","userInfo","setItem","encrypt","failureMessage","cursor","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e62c4623.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/boards.e1a1bef5.svg\";","module.exports = __webpack_public_path__ + \"static/media/form-layout.7b97f5e3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"serviceBroadcastArea\":\"ServiceBroadCaster_serviceBroadcastArea__1qM-S\"};","module.exports = __webpack_public_path__ + \"static/media/form-layout.9304ee21.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"board-container_Container__1830x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"board-holder_Table__373MD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"register-form_Form__2zdfV\",\"Layout\":\"register-form_Layout__deJbg\",\"name\":\"register-form_name__31IhC\",\"username\":\"register-form_username__3xaxu\",\"email\":\"register-form_email__25IeG\",\"password\":\"register-form_password__cCwGZ\",\"confirm\":\"register-form_confirm__3jpVV\",\"register\":\"register-form_register__3HScJ\",\"sso\":\"register-form_sso__3j8Aq\",\"cancel\":\"register-form_cancel__1y0sm\"};","import React, {Component} from \"react\";\nimport formLayout from \"./form-layout.svg\";\nimport classes from \"./login-form.module.css\"\n\nclass LoginForm extends Component {\n\n    state = {\n        user: this.props.loginEmail,\n        password: \"\"\n    }\n\n    loginInfoChanged = (event) => {\n        const item = event.target.name;\n        this.setState({\n            ...this.state,\n            [item]: event.target.value\n        })\n    }\n\n    clearForm = ()=>{\n        this.setState({\n            user: \"\",\n            password: \"\"\n        });\n    }\n\n    onLoginCancelled = () => {\n        this.clearForm();\n        this.props.onLoginCancelled();\n    }\n\n    render() {\n        return (\n            <form className={classes.Form} onSubmit={(event) => {\n                event.preventDefault();\n                this.props.onLogin({user: this.state.user, password: this.state.password});\n                this.clearForm();\n            }}>\n                <img src={formLayout} className={classes.Layout}  alt={\"login-form-layout\"} />\n                <input type={\"email\"} name={\"user\"} className={classes.user} placeholder={\"Email\"} onChange={this.loginInfoChanged} value={this.state.user}/><br/>\n                <input type={\"password\"} name={\"password\"} className={classes.password} placeholder={\"Password\"} onChange={this.loginInfoChanged} value={this.state.password}/><br/>\n                <button type={\"submit\"} className={classes.login}>LOGIN</button><br/>\n                <button type={\"button\"} className={classes.sso} onClick={this.props.onLoginWithGoogle}><i style={{\n                    \"color\":\"#4285f4\",\n                    backgroundColor: \"white\",\n                    padding: \"5px\",\n                    borderRadius: \"15px\"\n                }} className={\"fa fa-google\"}/>&nbsp;&nbsp;Login with Google</button>\n                <span className={\"btn btn-link \"+classes.cancel} onClick={this.onLoginCancelled}>Cancel</span>\n            </form>\n        )\n    }\n}\n\nexport default LoginForm;","export default function shuffle(array) {\n    let counter = array.length;\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        let index = Math.floor(Math.random() * counter);\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element with it\n        let temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n    return array;\n}","import React, {Component} from \"react\";\nimport arrayShuffle from \"../arrayShuffle/arrayShuffle\";\nimport classes from \"./ServiceBroadCaster.module.css\";\n\nclass ServiceBroadCaster extends Component {\n\n    state = {\n        servicesToDisplay: null\n    }\n\n    componentDidMount() {\n        this.displayServices();\n    }\n\n    displayServices = () => {\n        const chars = arrayShuffle(this.props.services).join('').split('');\n        let i = 0;\n        let string = <React.Fragment><i className={\"fa fa-hand-o-right\"}/> </React.Fragment>;\n        this.updateServices(string);\n        const interval = setInterval(()=>{\n            if(i < chars.length) {\n                string = this.concatElement(string, chars[i]);\n                this.updateServices(string);\n                if(chars[i] === '.' && i < chars.length-1){\n                    string = this.concatElement(string, <br/>);\n                    string = this.concatElement(string, <React.Fragment><i className={\"fa fa-hand-o-right\"}/> </React.Fragment>);\n                    this.updateServices(string);\n                }\n                i++;\n            } else {\n                string = this.concatElement(string, <br/>);\n                string = this.concatElement(string, <React.Fragment><i className={\"fa fa-hand-o-right\"}/> </React.Fragment>);\n                string = this.concatElement(string, <React.Fragment><span className={'btn btn-link'} onClick={this.props.handleLogin}>Login</span> or <span className={'btn btn-link'} onClick={this.props.handleRegister}>Register</span> to begin..</React.Fragment>);\n                this.updateServices(string);\n                clearInterval(interval);\n            }\n        },100);\n    }\n\n    concatElement = (el1, el2)=>{\n        return <React.Fragment>{el1}{el2}</React.Fragment>\n    }\n\n    updateServices = (el) => {\n        this.setState({\n            servicesToDisplay : <React.Fragment>{el} <b id={'display-cursor'}> _</b></React.Fragment>\n        })\n    }\n\n    render = () => {\n        return (\n            <p className={classes.serviceBroadcastArea}>\n                {this.state.servicesToDisplay}\n            </p>\n        );\n    }\n}\n\nexport default ServiceBroadCaster;","// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport * as firebase from \"firebase/app\";\n\n// Add the Firebase services that you want to use\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\nimport \"firebase/database\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDQSL_YD4ndOnhBDm-UWao9XkkAnXVG7Ww\",\n    authDomain: \"smart-pms-1797e.firebaseapp.com\",\n    databaseURL: \"https://smart-pms-1797e.firebaseio.com\",\n    projectId: \"smart-pms-1797e\",\n    storageBucket: \"smart-pms-1797e.appspot.com\",\n    messagingSenderId: \"97961959988\",\n    appId: \"1:97961959988:web:6d87fd4bcc221bf50f2061\",\n    measurementId: \"G-2KTZ0JQCHX\"\n};\n// Initialize Firebase\nconst app = firebase.initializeApp(firebaseConfig);\nconst base = firebase.database();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nlet currentUserId = null;\nfirebase.auth().onAuthStateChanged((user)=>{\n    if(user){\n        currentUserId = user.uid;\n    }\n})\nfirebase.analytics();\nexport {app, base, googleAuthProvider, currentUserId};","import {app, base, googleAuthProvider} from \"../base\";\n\nexport function loginWithEmailAndPassword(loginInfo, onSuccess, onFailure) {\n    app.auth().fetchSignInMethodsForEmail(loginInfo.user).then((providers) => {\n        if(providers.length === 0){\n            // return app.auth().createUserWithEmailAndPassword(loginInfo.user, this.state.password);\n            return false;\n        }else if(providers.indexOf(\"password\") === -1){\n            return null;\n        }else{\n            return app.auth().signInWithEmailAndPassword(loginInfo.user, loginInfo.password);\n        }\n    }).then(response=>{\n        if(response === null){\n            onFailure(\"user other method for login\");\n        }else if (response === false){\n            onFailure(\"username or password not valid\");\n        }else if ('user' in response){\n            base.ref('/users/' + response.user.uid).once('value').then(function(snapshot) {\n                onSuccess(response.user, snapshot.val());\n            });\n        }\n    }).catch(error=>console.log(error));\n}\n\nexport function fetchUserInfo(uid, callback) {\n    base.ref('/users/' + uid).on('value', function(snapshot) {\n        callback(snapshot.val());\n    });\n}\n\nexport function loginWithGoogle(onSuccess, onFailure) {\n    app.auth().signInWithPopup(googleAuthProvider).then((result, error)=>{\n        if(error){\n            onFailure(\"Authentication Failed. Try other way to log in\");\n        }else{\n            onSuccess(result.user);\n        }\n    })\n}\n\nexport function register(user, onSuccess, onFailure) {\n    app.auth().createUserWithEmailAndPassword(user.email, user.password).then((result, error) =>{\n        if(error){\n            onFailure(\"Failed to create account\");\n        }else{\n            if(result.user !== null && result.user.uid !== null) {\n                base.ref('users/' + result.user.uid).set({\n                    name: user.name,\n                    username: user.username\n                });\n                onSuccess(result.user);\n            }\n        }\n    })\n}","import React, {Component} from \"react\";\nimport formLayout from \"./form-layout.svg\";\nimport classes from \"./register-form.module.css\"\n\nclass RegisterForm extends Component {\n\n    state = {\n        name: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirm: \"\"\n    }\n\n    userInfoChanged = (event) => {\n        const item = event.target.name;\n        this.setState({\n            ...this.state,\n            [item]: event.target.value\n        })\n    }\n\n    clearForm = ()=>{\n        this.setState({\n            name: \"\",\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            confirm: \"\"\n        });\n    }\n\n    onRegistrationCancelled = () => {\n        this.clearForm();\n        this.props.onRegistrationCancelled();\n    }\n\n    render() {\n        return (\n            <form className={classes.Form} onSubmit={(event) => {\n                event.preventDefault();\n                if(this.state.password === this.state.confirm) {\n                    this.props.onRegister({\n                        name: this.state.name.trim(),\n                        username: this.state.username.trim(),\n                        email: this.state.email,\n                        password: this.state.password\n                    });\n                    this.clearForm();\n                }else{\n                    this.props.onRegistrationRejected(\"Failed to confirm password\");\n                }\n            }}>\n                <img src={formLayout} className={classes.Layout}  alt={\"registration-form-layout\"} />\n                <input type={\"text\"} name={\"name\"} className={classes.name} placeholder={\"Full Name\"} onChange={this.userInfoChanged} value={this.state.name} pattern={\"^ *[a-zA-Z]+ +([a-zA-Z]+ +|)[a-zA-Z]+ *$\"}/><br/>\n                <input type={\"text\"} name={\"username\"} className={classes.username} placeholder={\"Username\"} onChange={this.userInfoChanged} value={this.state.username} pattern={\"^ *[a-zA-Z0-9]{4,} *$\"}/><br/>\n                <input type={\"email\"} name={\"email\"} className={classes.email} placeholder={\"Email\"} onChange={this.userInfoChanged} value={this.state.email}/><br/>\n                <input type={\"password\"} name={\"password\"} className={classes.password} placeholder={\"Password\"} onChange={this.userInfoChanged} value={this.state.password} pattern={\"^ *[a-zA-Z0-9 ]{6,} *$\"}/><br/>\n                <input type={\"password\"} name={\"confirm\"} className={classes.confirm} placeholder={\"Confirm\"} onChange={this.userInfoChanged} value={this.state.confirm}/><br/>\n                <button type={\"submit\"} className={classes.register}>REGISTER</button><br/>\n                <button type={\"button\"} className={classes.sso} onClick={this.props.onRegisterWithGoogle}><i style={{\n                    \"color\":\"#4285f4\",\n                    backgroundColor: \"white\",\n                    padding: \"5px\",\n                    borderRadius: \"15px\"\n                }} className={\"fa fa-google\"}/>&nbsp;&nbsp;Login with Google</button>\n                <span className={\"btn btn-link \"+classes.cancel} onClick={this.onRegistrationCancelled}>Cancel</span>\n            </form>\n        )\n    }\n}\n\nexport default RegisterForm;","import {base} from \"../base\";\nimport { v4 as uuidv4 } from 'uuid';\n\nexport function fetchWalls(uid, callback) {\n    base.ref('/walls/' + uid).on('value', function(snapshot) {\n        callback(snapshot.val());\n    });\n}\n\nexport function addNewWall(uid, index, name, description, callback) {\n    const wid = uuidv4();\n    base.ref('/walls/' + uid+\"/\"+index).set({\n        \"wid\":wid,\n        \"name\":name\n    }, error=>{\n        if(!error) {\n            base.ref('/wall-info/' + wid).set({\n                \"description\": description,\n                \"createdOn\": new Date().toString(),\n                \"isTemplate\": false\n            }, error => {\n                callback(error)\n            });\n        }else callback(error);\n    });\n}","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Modal} from 'react-bootstrap';\n\nconst AppModal = props => {\n    return (\n        <Modal\n            show={props.show||false}\n            onHide={props.onHide}\n            backdrop={props.backdrop || \"static\"}\n            keyboard={false}\n        >\n            {\n                (props.onHide || props.title) && (\n                    <Modal.Header closeButton={props.onHide || false}>\n                        <Modal.Title>{props.title}</Modal.Title>\n                    </Modal.Header>\n                )\n            }\n            <Modal.Body>\n                {props.children}\n            </Modal.Body>\n            {\n                props.buttons && (\n                    <Modal.Footer>\n                        {props.buttons}\n                    </Modal.Footer>\n                )\n            }\n        </Modal>\n    );\n}\n\nexport default AppModal;","import React, {Component} from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport MdEditor from \"for-editor\";\nimport getMdEditorConfig from \"../../MdEditorConfig/MdEditorConfig\";\n\nclass CreateWallForm extends Component{\n    state={\n        name:\"\",\n        description:\"\",\n    }\n\n    $vm = React.createRef()\n\n    onValueChanged = event => {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    render() {\n        return (\n            <Form onSubmit={event=>{\n                event.preventDefault();\n                this.props.onSubmit({\n                    ...this.state\n                })\n            }}>\n                <Form.Group>\n                    <Form.Label>Project Wall Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Give a name to your project wall\"\n                        name={\"name\"}\n                        value={this.state.name}\n                        onChange={this.onValueChanged}\n                        required/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Wall Description</Form.Label>\n                    <MdEditor ref={this.$vm}\n                              toolbar={getMdEditorConfig()}\n                              language={\"en\"}\n                              placeholder={\"Give description for this wall. (Markdown supported)\"}\n                              name={\"description\"}\n                              value={this.state.description}\n                              onChange={value=>this.setState({\n                                  ...this.state,\n                                  description: value\n                              })}/>\n                </Form.Group>\n                <Form.Group style={{\n                    float:\"right\"\n                }}>\n                    <Button variant={\"secondary\"} onClick={this.props.onCancel}>Cancel</Button>\n                    &nbsp;\n                    <Button type=\"submit\">Create New</Button>\n                </Form.Group>\n            </Form>\n        );\n    }\n}\n\nexport default CreateWallForm;","export default function getMdEditorConfig(){\n    return {\n        h1: true, // h1\n        h2: true, // h2\n        h3: true, // h3\n        h4: true, // h4\n        img: false, // 图片\n        link: true, // 链接\n        code: true, // 代码块\n        preview: true, // 预览\n        expand: true, // 全屏\n        /* v0.0.9 */\n        undo: true, // 撤销\n        redo: true, // 重做\n        save: false, // 保存\n        /* v0.2.3 */\n        subfield: true\n    }\n}","import React, {Component} from \"react\";\nimport classes from \"./walls.module.css\"\nimport {addNewWall, fetchWalls} from \"../../api/service/Walls\";\nimport AppModal from \"../AppModal/AppModal\";\nimport CreateWallForm from \"./Form/CreateWallForm\";\n\nclass Walls extends Component {\n\n    state = {\n        totalWalls: 0,\n        walls: null,\n        showModal: false,\n        modalTitle: null,\n        modalBody: null\n    }\n\n    hideModal = () =>{\n        this.setState({\n            ... this.state,\n            showModal: false\n        })\n    }\n\n    componentDidMount() {\n        fetchWalls(this.props.uid, walls => {\n            this.setState({\n                ...this.state,\n                totalWalls: (walls||[]).length,\n                walls: (walls||[]).map(wall=>(\n                    <div key={wall.wid} className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                        <span\n                            className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.WallCard}\n                            onClick={()=>this.props.onExploreProjectWall(wall.wid)}>\n                            { wall.name }\n                        </span>\n                    </div>\n                ))\n            });\n        })\n    }\n\n    onCreateNewWall = () => {\n        const newState = {\n            ...this.state,\n            showModal: true,\n            modalTitle: \"Create New Project Wall\",\n            modalBody: <CreateWallForm\n                            onSubmit={this.createNewWall}\n                            onCancel={this.hideModal}/>\n        }\n        this.setState(newState);\n    }\n\n    createNewWall = (wall) => {\n        addNewWall(this.props.uid, this.state.totalWalls, wall.name, wall.description, e=>{\n            if(!e){\n                this.hideModal();\n            }\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label className={classes.Label}><i className={\"fa fa-th-large\"}/>&nbsp;<b>Your Project Walls:</b></label>\n                <div className={\"col-md-12 col-sm-12 container \" + classes.Dash}>\n                    <div className={\"row\"}>\n                        {this.state.walls}\n                        <div className={\"col-lg-3 col-md-4 col-sm-6 col-xs-10 row\"}>\n                            <span className={\"col-md-11 col-sm-11 col-xs-12 \" + classes.Card} onClick={this.onCreateNewWall}>\n                                <i className={\"fa fa-plus \"+classes.AddIcon}/><br/>\n                                Create New Project Wall\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <AppModal\n                    show={this.state.showModal}\n                    onHide={this.hideModal}\n                    title={this.state.modalTitle}>\n                        {this.state.modalBody}\n                </AppModal>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Walls;","import {base} from \"../base\";\nimport {v4 as uuidv4} from \"uuid\";\n\nexport function fetchBoards(uid, wid, callback) {\n    base.ref('/boards/' + uid + \"/\" + wid).on('value', function(snapshot) {\n        callback(snapshot.val());\n    });\n}\n\nexport function addNewBoard(uid, wid, index, title, description, callback) {\n    const bid = uuidv4();\n    base.ref('/boards/' + uid+\"/\"+wid+\"/\"+index).set({\n        \"bid\":bid,\n        \"title\":title\n    }, error=>{\n        if(!error) {\n            base.ref('/board-info/' + bid).set({\n                \"description\": description,\n                \"createdOn\": new Date().toString()\n            }, error => {\n                callback(error)\n            });\n        }else callback(error);\n    });\n}","import {base} from \"../base\";\nimport {v4 as uuidv4} from \"uuid\";\n\nexport function fetchCards(bid, callback) {\n    base.ref('/cards/' + bid).on('value', function(snapshot) {\n        callback(snapshot.val());\n    });\n}\n\nexport function addNewCard(bid, index, title, description, callback) {\n    const cid = uuidv4();\n    base.ref('/cards/' + bid+\"/\"+index).set({\n        \"cid\":cid,\n        \"title\":title\n    }, error=>{\n        if(!error) {\n            base.ref('/card-info/' + cid).set({\n                \"description\": description,\n                \"createdOn\": new Date().toString()\n            }, error => {\n                callback(error)\n            });\n        }else callback(error);\n    });\n}","import React, {Component} from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport MdEditor from \"for-editor\";\nimport getMdEditorConfig from \"../../MdEditorConfig/MdEditorConfig\";\n\nclass CreateForm extends Component{\n    state={\n        title:\"\",\n        description:\"\",\n    }\n\n    $vm = React.createRef()\n\n    onValueChanged = event => {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    render() {\n        return (\n            <Form onSubmit={event=>{\n                event.preventDefault();\n                this.props.onSubmit({\n                    ...this.state\n                })\n            }}>\n                <Form.Group>\n                    <Form.Label>Card Title</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Title\"\n                        name={\"title\"}\n                        value={this.state.title}\n                        onChange={this.onValueChanged}\n                        required/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Description</Form.Label>\n                    <MdEditor ref={this.$vm}\n                              toolbar={getMdEditorConfig()}\n                              language={\"en\"}\n                              placeholder={\"Give task description. (Markdown supported)\"}\n                              name={\"description\"}\n                              value={this.state.description}\n                              onChange={value=>this.setState({\n                                  ...this.state,\n                                  description: value\n                              })}/>\n                </Form.Group>\n                <Form.Group style={{\n                    float:\"right\"\n                }}>\n                    <Button variant={\"secondary\"} onClick={this.props.onCancel}>Cancel</Button>\n                    &nbsp;\n                    <Button type=\"submit\">Create New</Button>\n                </Form.Group>\n            </Form>\n        );\n    }\n}\n\nexport default CreateForm;","import React, {Component} from \"react\";\nimport classes from \"./cards.module.css\";\nimport {addNewCard, fetchCards} from \"../../api/service/Cards\";\nimport CreateForm from \"./Form/CreateForm\";\nimport {addNewBoard} from \"../../api/service/Boards\";\nimport AppModal from \"../AppModal/AppModal\";\n\nclass Cards extends Component{\n    state={\n        totalCards:0,\n        cards: null,\n        showModal: false,\n        modalTitle: null,\n        modalBody: null\n    }\n\n    hideModal = () =>{\n        this.setState({\n            ... this.state,\n            showModal: false\n        })\n    }\n\n    onCreateNewCard = () => {\n        const newState = {\n            ...this.state,\n            showModal: true,\n            modalTitle: \"Create New Card\",\n            modalBody: <CreateForm\n                onSubmit={this.createNewCard}\n                onCancel={this.hideModal}/>\n        }\n        this.setState(newState);\n    }\n\n    createNewCard = card => {\n        addNewCard(this.props.bid, this.state.totalCards, card.title, card.description, e=>{\n            if(!e){\n                this.hideModal();\n            }\n        })\n    }\n\n    componentDidMount() {\n        fetchCards(this.props.bid, cards => {\n            this.setState({\n                totalCards: (cards || []).length,\n                cards:  <React.Fragment>\n                            {(cards || []).map(card => (\n                                <div key={card.cid} className={\"card \" + classes.Card}>\n                                    {card.title}\n                                </div>\n                            ))}\n                            <div\n                                className={\"card \"+classes.Card}\n                                style={{\n                                    fontSize:\"9pt\",\n                                    textAlign:\"center\"\n                                }} onClick={this.onCreateNewCard}>\n                                <i className={\"fa fa-plus\"}/>&nbsp;Add New Card\n                            </div>\n                        </React.Fragment>\n            })\n        })\n    }\n\n    render() {\n        return <React.Fragment>\n                    {this.state.cards}\n                    <AppModal\n                        show={this.state.showModal}\n                        onHide={this.hideModal}\n                        title={this.state.modalTitle}>\n                        {this.state.modalBody}\n                    </AppModal>\n                </React.Fragment>\n    }\n}\n\nexport default Cards;","import React, {Component} from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport MdEditor from \"for-editor\";\nimport getMdEditorConfig from \"../../MdEditorConfig/MdEditorConfig\";\n\nclass CreateForm extends Component{\n    state={\n        title:\"\",\n        description:\"\",\n    }\n\n    $vm = React.createRef()\n\n    onValueChanged = event => {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    render() {\n        return (\n            <Form onSubmit={event=>{\n                event.preventDefault();\n                this.props.onSubmit({\n                    ...this.state\n                })\n            }}>\n                <Form.Group>\n                    <Form.Label>Board Title</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Title\"\n                        name={\"title\"}\n                        value={this.state.title}\n                        onChange={this.onValueChanged}\n                        required/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Board Description</Form.Label>\n                    <MdEditor ref={this.$vm}\n                              toolbar={getMdEditorConfig()}\n                              language={\"en\"}\n                              placeholder={\"Give description for this board. (Markdown supported)\"}\n                              name={\"description\"}\n                              value={this.state.description}\n                              onChange={value=>this.setState({\n                                  ...this.state,\n                                  description: value\n                              })}/>\n                </Form.Group>\n                <Form.Group style={{\n                    float:\"right\"\n                }}>\n                    <Button variant={\"secondary\"} onClick={this.props.onCancel}>Cancel</Button>\n                    &nbsp;\n                    <Button type=\"submit\">Create New</Button>\n                </Form.Group>\n            </Form>\n        );\n    }\n}\n\nexport default CreateForm;","import React from \"react\";\nimport classes from \"./board-container.module.css\";\n\nfunction BoardContainer(props){\n    return (\n        <td className={\"board-container \"+classes.Container} style={{width:props.width}}>\n            {props.children}\n        </td>\n    )\n}\n\nexport default BoardContainer;","import React from \"react\";\nimport classes from \"./board.module.css\";\n\nfunction Board(props) {\n    return(\n        <div className={\"card \"+ props.className} onClick={props.onClick}>\n            { props.title && <p className={classes.Title}>{props.title}</p> }\n            {props.children}\n        </div>\n    )\n}\n\nexport default Board;","import React from \"react\";\nimport classes from \"./board-holder.module.css\";\n\nfunction BoardHolder(props) {\n    return(\n        <table className={\"board-holder \"+classes.Table} style={{width:props.width}}>\n            <tbody>\n                <tr>\n                    {props.children}\n                </tr>\n            </tbody>\n        </table>\n    );\n}\n\nexport default BoardHolder;","import React, {Component} from \"react\";\nimport classes from \"./boards.module.css\"\nimport boardClasses from \"./Board/board.module.css\"\nimport {addNewBoard, fetchBoards} from \"../../api/service/Boards\";\nimport Cards from \"../Cards/Cards\";\nimport AppModal from \"../AppModal/AppModal\";\nimport CreateForm from \"./Form/CreateForm\";\nimport BoardContainer from \"./BoardContainer/BoardContainer\";\nimport Board from \"./Board/Board\";\nimport BoardHolder from \"./BoardHolder/BoardHolder\";\n\nclass Boards extends Component {\n\n    state = {\n        totalBoards: 0,\n        boards: null,\n        showModal: false,\n        modalTitle: null,\n        modalBody: null,\n        holder: null,\n    }\n\n    hideModal = () =>{\n        this.setState({\n            ... this.state,\n            showModal: false\n        })\n    }\n\n    /**\n     * Add event listener\n     */\n    componentDidMount() {\n        fetchBoards(this.props.uid, this.props.wallId, boards => {\n            let _boards = null;\n            if(boards !== null) {\n                console.log(\"invoked \" + boards.length)\n                _boards = boards.map(board => (\n                    <BoardContainer\n                        key={board.bid}\n                        total={boards.length}\n                        width={this.calculateContainerWidth(boards.length)}\n                    >\n                        <Board\n                            className={boardClasses.Board}\n                            title={board.title}\n                        >\n                            <Cards bid={board.bid}/>\n                        </Board>\n                    </BoardContainer>\n                ));\n            }\n            const total = boards? boards.length : 0;\n            this.setState({\n                totalBoards: total,\n                holder: (\n                    <BoardHolder total={total} width={this.calculateHolderWidth(total)}>\n                        {_boards}\n                        <BoardContainer total={total} width={this.calculateContainerWidth(total)}>\n                            <Board className={boardClasses.NewBoard} onClick={this.onAddNewBoard}>\n                                <span><i className={\"fa fa-plus\"}/>&nbsp;&nbsp;Add New Board</span>\n                            </Board>\n                        </BoardContainer>\n                    </BoardHolder>\n                )\n            })\n        });\n        window.addEventListener(\"resize\", () =>{\n            let items = document.getElementsByClassName(\"board-container\");\n            for(let i=0; i<items.length; i++){\n                items[i].style.width = this.calculateContainerWidth(this.state.totalBoards);\n            }\n            document.getElementsByClassName(\"board-holder\")[0].style.width =\n                this.calculateHolderWidth(this.state.totalBoards);\n        });\n    }\n\n    calculateContainerWidth(totalBoards){\n        const windowWidth = window.innerWidth;\n        let width = (windowWidth <= 600)? ((totalBoards + 1) * windowWidth) - 30 : null;\n        return  width? width+\"px\": null;\n    }\n\n    calculateHolderWidth(totalBoards){\n        const windowWidth = window.innerWidth;\n        let width = null;\n        if(windowWidth > 1000) {\n            width = (totalBoards+1) * 450;\n        } else {\n            if(windowWidth > 600) {\n                width = (totalBoards+1) * 350;\n            } else {\n                width = ((totalBoards+1) * windowWidth) - 20;\n            }\n        }\n        return  width? width+\"px\": null;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <label className={classes.Label}><i className={\"fa fa-th-large\"}/>&nbsp;<b>Boards In This Wall:</b></label>\n                <div className={classes.Collection}>\n                    {this.state.holder}\n                </div>\n                <AppModal\n                    show={this.state.showModal}\n                    onHide={this.hideModal}\n                    title={this.state.modalTitle}>\n                    {this.state.modalBody}\n                </AppModal>\n            </React.Fragment>\n        )\n    }\n\n    onAddNewBoard = () => {\n        const newState = {\n            ...this.state,\n            showModal: true,\n            modalTitle: \"Add New BoardContainer\",\n            modalBody: <CreateForm\n                onSubmit={this.createNewBoard}\n                onCancel={this.hideModal}/>\n        }\n        this.setState(newState);\n    }\n\n    createNewBoard = board => {\n        addNewBoard(this.props.uid, this.props.wallId, this.state.totalBoards, board.title, board.description, e=>{\n            if(!e){\n                this.hideModal();\n            }\n        })\n    }\n\n}\n\nexport default Boards;","export const Pages = {\n    WALL: \"WALL\",\n    BOARD: \"BOARD\"\n}","import React, {Component} from \"react\";\nimport Walls from \"../Walls/Walls\";\nimport Boards from \"../Boards/Boards\";\nimport {Pages} from \"../Pages\";\n\nclass Dash extends Component{\n\n    state={\n        component: <React.Fragment/>,\n        page: Pages.WALL,\n        wid: null\n    }\n\n    componentDidMount() {\n        switch (this.state.page) {\n            case Pages.WALL:\n                this.onListWalls();\n                break;\n            case Pages.BOARD:\n                this.onExploreProjectWall(this.state.wid)\n                break;\n        }\n    }\n\n    onListWalls = () => {\n        this.setState({\n            component: <Walls uid={this.props.uid} onExploreProjectWall={this.onExploreProjectWall}/>,\n            page: Pages.WALL,\n        })\n    }\n\n    onExploreProjectWall = wallId => {\n        this.setState({\n            component: <Boards uid={this.props.uid} wallId={wallId}/>,\n            page: Pages.BOARD,\n            wid: wallId\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.component}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Dash;","import React, {Component} from 'react';\nimport './App.css';\nimport boards from './images/boards.svg';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Alert, Button} from 'react-bootstrap';\nimport LoginForm from \"./components/UA/Login/LoginForm\";\nimport ServiceBroadCaster from \"./components/ServiceBroadCaster/ServiceBroadCaster\";\nimport {fetchUserInfo, loginWithEmailAndPassword, loginWithGoogle, register} from \"./api/service/UAC\";\nimport RegisterForm from \"./components/UA/Register/RegisterForm\";\nimport Dash from \"./components/Dash/Dash\";\nimport CryptoJS from \"crypto-js\";\n\nclass App extends Component{\n\n    state = {\n        loginEmail: null,\n        showLoginForm: false,\n        showRegistrationForm: false,\n        message: null,\n        messageVariant: \"\",\n        // TODO\n        currentUserId:\n            // \"dummy\",\n            (localStorage.getItem(\"c-us\")||null) !== null ?\n            CryptoJS.AES.decrypt(localStorage.getItem(\"c-us\"), \"nnDZyHWCkWEf2teEisnwafQTz365HKs9TrGwwtXQgLPeV2fw\")\n                .toString(CryptoJS.enc.Utf8):null,\n        currentUser:\n            null\n            // { name: \"John Doe\" }\n    }\n\n    componentDidMount() {\n        if(this.state.currentUser === null && this.state.currentUserId !== null){\n            fetchUserInfo(this.state.currentUserId, userInfo => {\n                this.setState({\n                    ...this.state,\n                    currentUser: userInfo\n                });\n            })\n        }\n    }\n\n    handleLogin = (email) => {\n        this.setState({\n            ...this.state,\n            loginEmail: typeof email === 'string' ? email : \"\" ,\n            showLoginForm: !this.state.showLoginForm,\n            showRegistrationForm: false\n        });\n    }\n\n    onLoginCancelled = () => {\n        this.setState({\n            ...this.state,\n            showLoginForm: false\n        });\n    }\n\n    handleRegister = () => {\n        this.setState({\n            ...this.state,\n            showLoginForm: false,\n            showRegistrationForm: !this.state.showRegistrationForm\n        });\n    }\n\n    onRegistrationCancelled = () => {\n        this.setState({\n            ...this.state,\n            showRegistrationForm: false\n        });\n    }\n\n    onRegistrationRejected = (message) => {\n        this.setState({\n            ...this.state,\n            message: message,\n            messageVariant: \"danger\"\n        })\n    }\n\n    clearErrorMessage = () => {\n        this.setState({\n            ...this.state,\n            message: null\n        })\n    }\n\n    getUserLabel = () => {\n        const name = this.state.currentUser.name.split(\" \");\n        return (name[0].charAt(0) + name[1].charAt(0)).toUpperCase();\n    }\n\n    render = () => {\n        return (\n            <div className=\"App\" onScroll={event=>{\n                //TODO\n            }}>\n                <header className={\"App-header\"+(this.state.currentUserId !== null && \" logged-in\")}>\n                    <h1 id={\"app-header\"} className={this.state.currentUserId !== null && \"logged-in\"}>SMART TASK MANAGEMENT</h1>\n                    {this.state.currentUserId === null && (\n                        <React.Fragment>\n                            {/*for web browsers*/}\n                            <span id={\"l-logInBtn\"} onClick={this.handleLogin}>login</span>\n                            <span id={\"l-registerBtn\"} onClick={this.handleRegister}>register</span>\n                            {/*for mobile devices*/}\n                            <Button id={\"logInBtn\"} type={\"button\"} variant={\"dark\"} className={\"mr-2 sm-2\"} onClick={this.handleLogin}>Login <i className={\"fa fa-sign-in\"}/></Button>\n                            <Button id={\"registerBtn\"} type={\"button\"} variant={\"dark\"} className={\"mr-2 sm-2\"} onClick={this.handleRegister}>Register <i className={\"fa fa-id-card\"}/></Button>\n                        </React.Fragment>\n                    )}\n                    {this.state.currentUser !== null && (\n                        <span className={\"menus\"}>\n                            <i className=\"fa fa-tachometer tachometer\" aria-hidden=\"true\"/>\n                            <i className=\"fa fa-bell notification-bell\" aria-hidden=\"true\"/>\n                            <label className={\"user-label\"}>{this.getUserLabel()}</label>\n                        </span>\n                    )}\n                </header>\n                <img src={boards} className={\"App-logo\"} alt=\"logo\" />\n                <div className={\"App-Content\"}>\n                    {this.state.message !== null && (\n                        <div>\n                            <Alert className={\"Alert\"} variant={this.state.messageVariant} onClose={this.clearErrorMessage} dismissible>\n                                {this.state.message}\n                            </Alert>\n                        </div>\n                    )}\n\n                    {/*TODO*/}\n                    {/*<Dash/>*/}\n                    {this.state.currentUserId === null ? (\n                        <ServiceBroadCaster services={[\n                            \"Smart Management of tasks you care.\",\n                            \"Get your activities in track.\",\n                            \"Automation on your ease.\",\n                            \"Analytical Reports for better control.\"\n                        ]}\n                                            handleLogin={this.handleLogin}\n                                            handleRegister={this.handleRegister} />\n                    ):(\n                        <Dash uid={this.state.currentUserId}/>\n                    )}\n                </div>\n                    {this.state.showLoginForm && (\n                        <LoginForm\n                            loginEmail={this.state.loginEmail}\n                            onLoginCancelled={this.onLoginCancelled}\n                            onLogin={this.onLogin}\n                            onLoginWithGoogle={this.onLoginWithGoogle} />\n                    )}\n                    {this.state.showRegistrationForm && (\n                        <RegisterForm\n                            onRegistrationCancelled={this.onRegistrationCancelled}\n                            onRegistrationRejected={this.onRegistrationRejected}\n                            onRegister={this.onRegister}\n                            onRegisterWithGoogle={this.onLoginWithGoogle} />\n                    )}\n            </div>\n        );\n    }\n\n    onLogin = (loginInfo) => {\n        loginWithEmailAndPassword(loginInfo, (user, userInfo) => {\n            localStorage.setItem(\"c-us\", CryptoJS.AES.encrypt(user.uid, \"nnDZyHWCkWEf2teEisnwafQTz365HKs9TrGwwtXQgLPeV2fw\"));\n            this.setState({\n                ...this.state,\n                currentUserId: user.uid,\n                message: \"Welcome, \"+userInfo.name,\n                messageVariant: \"success\",\n                currentUser: userInfo\n            })\n        }, failureMessage => {\n            this.setState({\n                ...this.state,\n                message: failureMessage,\n                messageVariant: \"danger\"\n            })\n        });\n        this.onLoginCancelled();\n    }\n\n    onLoginWithGoogle = () => {\n        loginWithGoogle((user) => {\n            this.setState({\n                ...this.state,\n                currentUserId: user.uid,\n                message: \"Welcome, \" + user.email,\n                messageVariant: \"success\"\n            })\n        }, failureMessage => {\n            this.setState({\n                ...this.state,\n                message: failureMessage,\n                messageVariant: \"danger\"\n            })\n        });\n        this.onLoginCancelled();\n    }\n\n    onRegister = (userInfo) => {\n        register(userInfo, user => {\n            this.setState({\n                ...this.state,\n                message: <React.Fragment>Account created successfully. <b style={{cursor:\"pointer\"}} onClick={()=>{\n                    this.handleLogin(userInfo.email);\n                }}>login now</b></React.Fragment>,\n                messageVariant: \"success\"\n            })\n        }, failureMessage => {\n            this.setState({\n                ...this.state,\n                message: failureMessage,\n                messageVariant: \"danger\"\n            })\n        })\n        this.onRegistrationCancelled();\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"login-form_Form__1-eTo\",\"Layout\":\"login-form_Layout__1cKCg\",\"user\":\"login-form_user__3jFEV\",\"password\":\"login-form_password__2hrWx\",\"login\":\"login-form_login__1RFxL\",\"sso\":\"login-form_sso__14RBy\",\"cancel\":\"login-form_cancel__3xtjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"walls_Label__1LV6O\",\"Dash\":\"walls_Dash__Mm_5I\",\"row\":\"walls_row__33_Up\",\"Card\":\"walls_Card__36XW2\",\"WallCard\":\"walls_WallCard__78u4s\",\"AddIcon\":\"walls_AddIcon__3omaz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Board\":\"board_Board__3GDso\",\"NewBoard\":\"board_NewBoard__1BREJ\",\"Title\":\"board_Title__13AF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"boards_Label__36Ttk\",\"Collection\":\"boards_Collection__GpdXJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"cards_Card__2-LXG\"};"],"sourceRoot":""}